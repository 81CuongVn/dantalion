{"version":3,"sources":["webpack://_N_E/./src/components/atoms/Anchor.tsx","webpack://_N_E/./src/components/atoms/Header.tsx","webpack://_N_E/./src/components/atoms/InlineMarkdown.tsx","webpack://_N_E/./src/components/atoms/List.tsx","webpack://_N_E/./src/components/molecules/InlineMarkdownList.tsx","webpack://_N_E/./src/components/molecules/Details.tsx","webpack://_N_E/./src/components/molecules/IconAnchor.tsx","webpack://_N_E/./src/components/molecules/ExternalAnchor.tsx","webpack://_N_E/./src/components/molecules/Article.tsx","webpack://_N_E/./src/components/molecules/FooterNavigation.tsx","webpack://_N_E/./src/components/molecules/Footer.tsx","webpack://_N_E/./src/components/atoms/Button.tsx","webpack://_N_E/./src/components/atoms/Input.tsx","webpack://_N_E/./src/components/molecules/BirthForm.tsx","webpack://_N_E/./src/utils/psCompress.ts","webpack://_N_E/./src/hooks/useQuery.ts","webpack://_N_E/./src/hooks/usePersonality.ts","webpack://_N_E/./src/stores/FormReducer.ts","webpack://_N_E/./src/components/organisms/BirthForm.tsx","webpack://_N_E/./src/components/atoms/head/Title.tsx","webpack://_N_E/./src/components/atoms/head/CommonMeta.tsx","webpack://_N_E/./src/components/atoms/head/Links.tsx","webpack://_N_E/./src/components/atoms/head/MobileMeta.tsx","webpack://_N_E/./src/components/atoms/head/OpenGraphMeta.tsx","webpack://_N_E/./src/components/molecules/HeadContents.tsx","webpack://_N_E/./src/components/organisms/Head.tsx","webpack://_N_E/./src/components/atoms/Select.tsx","webpack://_N_E/./src/components/organisms/LanguageSelector.tsx","webpack://_N_E/./src/components/atoms/ResultFrame.tsx","webpack://_N_E/./src/components/atoms/ResultHeading.tsx","webpack://_N_E/./src/components/molecules/ResultDetail.tsx","webpack://_N_E/./src/components/organisms/ResultDetail.tsx","webpack://_N_E/./src/components/organisms/AccompanyingResult.tsx","webpack://_N_E/./src/components/organisms/GeniusResultDetail.tsx","webpack://_N_E/./src/components/organisms/LifeBaseResultDetail.tsx","webpack://_N_E/./src/components/molecules/TupleList.tsx","webpack://_N_E/./src/components/organisms/MotivationResultDetail.tsx","webpack://_N_E/./src/components/organisms/PotentialResultDetail.tsx","webpack://_N_E/./src/components/molecules/PersonalityFileId.tsx","webpack://_N_E/./src/components/organisms/PersonalityFileId.tsx","webpack://_N_E/./src/components/molecules/TweetButton.tsx","webpack://_N_E/./src/components/organisms/TweetButton.tsx","webpack://_N_E/./src/components/organisms/VectorResultDetail.tsx","webpack://_N_E/./src/components/organisms/Result.tsx","webpack://_N_E/./src/components/templates/Template.tsx"],"names":["Component","children","className","href","noblank","nofollow","tooltip","classNames","rel","tabIndex","title","target","displayName","role","aria-label","components","props","p","c","itemType","List","order","Item","Children","map","child","index","InlineMarkdown","caption","headingLevel","Heading","open","InlineMarkdownList","icon","iconClassName","sup","Sup","Anchor","IconAnchor","faExternalLinkAlt","featureBody","featureHeading","tooltipFeatureDetails","a","ExternalAnchor","node","linkTarget","Details","author","faTwitter","faGithub","faYoutube","faHome","FooterNavigation","onClick","type","id","label","htmlFor","birthday","birthdayLabel","buttonLabel","legendLabel","nickname","nicknameLabel","onChangeBirthday","onChangeNickname","onSubmit","notes","Input","autoComplete","defaultValue","enterKeyHint","max","min","name","onChange","required","maxLength","placeholder","Button","faSearch","xor","list","reduce","acc","cur","decode","str","src","Base64","flatMap","b","length","array","chunk","v","cd","cycle","inner","types","lifeBase","outer","potentials","workStyle","undefined","encode","ps","psToArray","bytes","byte","Uint8Array","excludes","Object","freeze","useLanguage","query","useRouter","lang","useResultQuery","isSsr","useIsSsr","keys","find","q","includes","useRoute","defaultLang","defaultResult","router","useCallback","result","push","pathname","scroll","shallow","usePSDecoder","split","pb","nb","t","useTranslation","usePSRedirection","route","e","preventDefault","getPersonality","n","setBirthday","Symbol","setNickname","defaultBirthday","formReducer","state","payload","createContainer","useReducer","FormReducer","useContainer","action","BirthForm","returnObjects","currentTarget","value","appName","pageName","join","color","description","keywords","httpEquiv","content","baseUrl","rootUrl","sizes","article","bannerHeight","bannerUrl","bannerWidth","property","bannerPath","CommonMeta","MobileMeta","OpenGraphMeta","Links","Title","HeadContents","process","source","disabled","item","text","autoKey","baseSource","entries","locales","language","useMemo","Select","additional","detail","heading","headingDetail","hook","hookAdditional","moreDetail","ResultFrame","ResultHeading","ResultDetail","more","accessors","details","brain","getByKey","getCategoryDetail","communication","management","response","position","descriptions","key","summary","weak","strategy","genius1","values","genius2","desc","motivation","TupleList","personality","PersonalityFileId","toCC","createUrl","hashtag","url","stringify","button_hashtag","addQueryPrefix","hooks","TweetButton","window","location","accessor","vector","createAccessors","dt","getDetail","VectorResultDetail","getDescription","GeniusResultDetail","genius","LifeBaseResultDetail","PotentialResultDetail","potential","MotivationResultDetail","AccompanyingResult","Head","Header","Result","Provider","Article","joinArrays","Footer","LanguageSelector"],"mappings":"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","file":"static/chunks/937-50c8516264c015998e2d.js","sourcesContent":["import classNames, { Argument } from 'classnames';\nimport type { ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children: ReactNode;\n  /** If you need the CSS classes, specify them. */\n  readonly className?: Argument;\n  /** The URL. */\n  readonly href: string;\n  /** Whether the component remove a target attribute. */\n  readonly noblank?: boolean;\n  /** Whether the component specifies a “nofflow” flag. */\n  readonly nofollow?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/** The anchor component */\nconst Component: VFC<Props> = ({\n  children,\n  className,\n  href,\n  noblank,\n  nofollow,\n  tooltip,\n}) => (\n  // eslint-disable-next-line react/jsx-no-target-blank\n  <a\n    className={classNames('text-blue-800 hover:text-blue-500', className)}\n    href={href}\n    rel={classNames('noopener noreferrer', { nofollow })}\n    tabIndex={0}\n    title={tooltip}\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    {...(noblank ? {} : { target: '_blank' })}\n  >\n    {children}\n  </a>\n);\nComponent.displayName = 'Anchor';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n}\n\n/** The header component */\nconst Component: VFC<Props> = ({ children }) => (\n  <header className=\"text-gray-700\">\n    <h1\n      className=\"font-thin py-10 text-4xl text-center sm:text-6xl\"\n      role=\"banner\"\n    >\n      <i aria-label=\"Lion\" className=\"not-italic\" role=\"img\">\n        🦁\n      </i>\n      Dantalion:\n      <wbr />\n      &nbsp;\n      {children}\n    </h1>\n  </header>\n);\nComponent.displayName = 'Header';\n\nexport default Component;\n","import type { VFC } from 'react';\nimport ReactMarkdown, { ReactMarkdownOptions } from 'react-markdown';\n\n/** The inline markdown component */\nconst Component: VFC<ReactMarkdownOptions> = ({\n  children,\n  components,\n  ...props\n}) => (\n  <ReactMarkdown\n    components={{ p: ({ children: c }) => <>{c}</>, ...components }}\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    {...props}\n  >\n    {children}\n  </ReactMarkdown>\n);\nComponent.displayName = 'InlineMarkdown';\n\nexport default Component;\n","import {\n  Children,\n  ComponentType,\n  LiHTMLAttributes,\n  ReactNodeArray,\n  VFC,\n} from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNodeArray;\n  /** If you need the CSS classes, specify them. */\n  readonly className?: string;\n  /** If you need a list item component, specify it. */\n  readonly itemType?: ComponentType<LiHTMLAttributes<HTMLLIElement>>;\n  /** Whether the use as an order list. */\n  readonly order?: boolean;\n}\n\n/** The generical list component */\nconst Component: VFC<Props> = ({ children, className, itemType, order }) => {\n  const List = order ? 'ol' : 'ul';\n  const Item = itemType ?? 'li';\n  return (\n    <List className={className}>\n      {Children.toArray(children).map((child, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Item key={index}>{child}</Item>\n      ))}\n    </List>\n  );\n};\nComponent.displayName = 'List';\n\nexport default Component;\n","import type { VFC } from 'react';\nimport InlineMarkdown from '../atoms/InlineMarkdown';\nimport List, { Props as ListProps } from '../atoms/List';\n\n/** Type definition of the required attributes. */\nexport interface Props extends Omit<ListProps, 'children'> {\n  /** The children items. */\n  readonly children?: readonly string[];\n}\n\n/** The generic list component which its items allow the Markdown format. */\nconst Component: VFC<Props> = ({ children, ...props }) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <List {...props}>\n    {children?.map((child) => (\n      <InlineMarkdown key={child}>{child}</InlineMarkdown>\n    ))}\n  </List>\n);\nComponent.displayName = 'InlineMarkdownList';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport InlineMarkdownList from './InlineMarkdownList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The caption. */\n  readonly caption?: ReactNode;\n  /** The children items. */\n  readonly children?: readonly string[];\n  /** The heading level. */\n  readonly headingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Whether that expand automatically. */\n  readonly open?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/**\n * The collapsable list component which its items allow the Markdown format.\n */\nconst Component: VFC<Props> = ({\n  caption,\n  children,\n  headingLevel: Heading = 'h4',\n  open,\n  tooltip,\n}) => (\n  <details\n    className=\"my-5 nm-flat-gray-200-sm rounded-2xl md:mx-1 md:rounded-3xl\"\n    open={open}\n  >\n    <summary\n      className=\"bg-gray-200 cursor-pointer duration-200 ease-in-out outline-none px-8 py-4 rounded-2xl select-none text-xl transform transition focus:bg-gray-100 hover:bg-gray-100 md:rounded-3xl sm:text-2xl\"\n      tabIndex={0}\n      title={tooltip}\n    >\n      <Heading className=\"font-bold inline\">{caption}</Heading>\n    </summary>\n    <div className=\"border-gray-300 border-t-2 mx-4 overflow-y-scroll p-2\">\n      <InlineMarkdownList className=\"list-disc p-4 md:px-8\">\n        {children}\n      </InlineMarkdownList>\n    </div>\n  </details>\n);\nComponent.displayName = 'Details';\n\nexport default Component;\n","import type { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type { ReactNode, VFC } from 'react';\nimport Anchor from '../atoms/Anchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** The URL. */\n  readonly href: string;\n  /** The icon. */\n  readonly icon: IconProp;\n  /** If you need the CSS classes for icon, specify them. */\n  readonly iconClassName?: string;\n  /** Whether the component specifies a “nofflow” flag. */\n  readonly nofollow?: boolean;\n  /** Whether the icon specifies as a superscript. */\n  readonly sup?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/** The footer component */\nconst Component: VFC<Props> = ({\n  children,\n  href,\n  icon,\n  iconClassName,\n  nofollow,\n  sup,\n  tooltip,\n}) => {\n  const Sup = sup ? 'sup' : 'span';\n  return (\n    <Anchor href={href} nofollow={nofollow} tooltip={tooltip}>\n      {children && <span className=\"mr-1\">{children}</span>}\n      <Sup>\n        <FontAwesomeIcon icon={icon} className={iconClassName} />\n      </Sup>\n    </Anchor>\n  );\n};\nComponent.displayName = 'IconAnchor';\n\nexport default Component;\n","import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport type { ReactNode, VFC } from 'react';\nimport IconAnchor from './IconAnchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** The URL. */\n  readonly href: string;\n  /** Whether the component specifies a “nofflow” flag. */\n  readonly nofollow?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/** The external anchor component */\nconst Component: VFC<Props> = ({ children, href, nofollow, tooltip }) => (\n  <IconAnchor\n    href={href}\n    icon={faExternalLinkAlt}\n    iconClassName=\"opacity-70 text-xs\"\n    nofollow={nofollow}\n    sup\n    tooltip={tooltip}\n  >\n    {children}\n  </IconAnchor>\n);\nComponent.displayName = 'ExternalAnchor';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Details from './Details';\nimport ExternalAnchor from './ExternalAnchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the main article text as a Markdown format */\n  readonly children: string;\n  /** Specifies the body of feature text */\n  readonly featureBody?: string[];\n  /** Specifies the heading of feature text */\n  readonly featureHeading?: ReactNode;\n  /** The tooltip on hover the feature. */\n  readonly tooltipFeatureDetails?: string;\n}\n\n/** The main article component */\nconst Component: VFC<Props> = ({\n  children,\n  featureBody,\n  featureHeading,\n  tooltipFeatureDetails,\n}) => (\n  <article>\n    <ReactMarkdown\n      components={{\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        a: ({ children: c, href }) => (\n          <ExternalAnchor href={href as string} nofollow>\n            {c}\n          </ExternalAnchor>\n        ),\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        p: ({ node, ...props }) => <p className=\"py-3\" {...props} />,\n      }}\n      className=\"font-light leading-loose p-3 text-lg sm:px-2\"\n      linkTarget=\"_blank\"\n    >\n      {children}\n    </ReactMarkdown>\n    <Details\n      caption={featureHeading}\n      headingLevel=\"h2\"\n      tooltip={tooltipFeatureDetails}\n    >\n      {featureBody}\n    </Details>\n  </article>\n);\nComponent.displayName = 'Article';\n\nexport default Component;\n","import {\n  faGithub,\n  faTwitter,\n  faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport type { ReactNode, VFC } from 'react';\nimport List from '../atoms/List';\nimport IconAnchor from './IconAnchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the author-name */\n  readonly author?: ReactNode;\n}\n\n/** The footer component */\nconst Component: VFC<Props> = ({ author }) => (\n  <List\n    className=\"divide-x-2 divide-gray-400 flex flex-row justify-center p-4\"\n    itemType={({ className, ...props }) => (\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      <li className={classNames('px-3', className)} {...props} />\n    )}\n  >\n    <>&copy; {author}</>\n    <IconAnchor\n      href=\"https://twitter.com/kurone_kito\"\n      icon={faTwitter}\n      tooltip=\"Twitter\"\n    />\n    <IconAnchor\n      href=\"https://github.com/kurone-kito\"\n      icon={faGithub}\n      tooltip=\"GitHub\"\n    />\n    <IconAnchor\n      href=\"https://www.youtube.com/channel/UCJs_ejHQM0rcemJaeO2s5vA\"\n      icon={faYoutube}\n      tooltip=\"YouTube\"\n    />\n    <IconAnchor href=\"https://kit.black/\" icon={faHome} tooltip=\"Homepage\" />\n  </List>\n);\nComponent.displayName = 'FooterNavigation';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport FooterNavigation from './FooterNavigation';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the author name. */\n  readonly author?: ReactNode;\n  /** The children items. */\n  readonly children?: ReactNode;\n}\n\n/** The footer component */\nconst Component: VFC<Props> = ({ author, children }) => (\n  <footer\n    className=\"nm-flat-gray-300-xs mt-4 py-4 text-gray-700 text-sm\"\n    role=\"contentinfo\"\n  >\n    <nav className=\"flex flex-col mx-auto sm:flex-row lg:container\">\n      <div className=\"flex flex-grow items-center justify-center\">\n        <FooterNavigation author={author} />\n      </div>\n      <div className=\"flex-shrink p-4\">{children}</div>\n    </nav>\n  </footer>\n);\nComponent.displayName = 'Footer';\n\nexport default Component;\n","import classNames, { Argument } from 'classnames';\nimport type { MouseEventHandler, ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items */\n  readonly children?: ReactNode;\n  /** If you need the CSS classes, specify them */\n  readonly className?: Argument;\n  /** Callback to call when the user taps */\n  readonly onClick?: MouseEventHandler<HTMLButtonElement>;\n}\n\n/** The button component */\nconst Component: VFC<Props> = ({ children, className, onClick }) => (\n  <div className={classNames('flex justify-center pt-8', className)}>\n    <button\n      className=\"duration-200 ease-in-out flex-grow font-bold leading-5 nm-flat-gray-300 px-8 py-4 rounded-full tracking-widest transform transition uppercase hover:nm-flat-gray-50-lg\"\n      onClick={onClick}\n      tabIndex={0}\n      type=\"submit\"\n    >\n      {children}\n    </button>\n  </div>\n);\nComponent.displayName = 'Button';\n\nexport default Component;\n","import type { InputHTMLAttributes, ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'className'> {\n  /** The label for control */\n  readonly label?: ReactNode;\n}\n\n/** The input control component */\nconst Component: VFC<Props> = ({ id, label, ...props }) => (\n  <label\n    className=\"flex flex-col my-4 sm:flex-row sm:items-center\"\n    htmlFor={id}\n  >\n    <span className=\"font-bold mb-1 text-sm tracking-widest text-gray-700 sm:mb-0 sm:mr-8 sm:w-1/3\">\n      {label}\n    </span>\n    <input\n      className=\"appearance-none duration-200 flex-grow leading-5 mr-1 w-full nm-inset-gray-100 px-8 py-4 rounded-full focus:nm-inset-gray-50 hover:nm-inset-gray-50 sm:w-2/3\"\n      id={id}\n      tabIndex={0}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n    />\n  </label>\n);\nComponent.displayName = 'Input';\n\nexport default Component;\n","import { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type {\n  ChangeEventHandler,\n  FormEventHandler,\n  ReactNode,\n  ReactNodeArray,\n  VFC,\n} from 'react';\nimport Button from '../atoms/Button';\nimport Input from '../atoms/Input';\nimport List from '../atoms/List';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The default birthday value string */\n  readonly birthday?: string;\n  /** The label for birthday input control */\n  readonly birthdayLabel?: string;\n  /** The label for button control */\n  readonly buttonLabel?: ReactNode;\n  /** The form title */\n  readonly legendLabel?: ReactNode;\n  /** The default nickname value string */\n  readonly nickname?: string;\n  /** The label for nickname input control */\n  readonly nicknameLabel?: string;\n  /** The default nickname value string */\n  readonly notes?: ReactNodeArray;\n  /** Callback to call when the user changes the birthday */\n  readonly onChangeBirthday?: ChangeEventHandler<HTMLInputElement>;\n  /** Callback to call when the user changes the nickname */\n  readonly onChangeNickname?: ChangeEventHandler<HTMLInputElement>;\n  /** Callback to call when the user taps to submit button */\n  readonly onSubmit?: FormEventHandler<HTMLFormElement>;\n}\n\n/** The birthday form component. */\nconst Component: VFC<Props> = ({\n  birthday,\n  birthdayLabel,\n  buttonLabel,\n  legendLabel,\n  nickname,\n  nicknameLabel,\n  onChangeBirthday,\n  onChangeNickname,\n  onSubmit,\n  notes,\n}) => (\n  <form className=\"nm-flat-gray-300-xs p-6 md:rounded-3xl\" onSubmit={onSubmit}>\n    <fieldset>\n      <legend className=\"font-light text-xl\">{legendLabel}</legend>\n      <Input\n        autoComplete=\"bday\"\n        defaultValue={birthday}\n        enterKeyHint=\"go\"\n        id=\"birthday\"\n        label={birthdayLabel}\n        max=\"2050-12-31\"\n        min=\"1873-02-01\"\n        name=\"birthday\"\n        onChange={onChangeBirthday}\n        required\n        type=\"date\"\n      />\n      <Input\n        autoComplete=\"nickname\"\n        defaultValue={nickname}\n        enterKeyHint=\"go\"\n        id=\"nickname\"\n        label={nicknameLabel}\n        maxLength={240}\n        name=\"nickname\"\n        onChange={onChangeNickname}\n        placeholder={nicknameLabel}\n        type=\"text\"\n      />\n      <List className=\"text-red-900 text-sm\">{notes}</List>\n      <Button>\n        <FontAwesomeIcon className=\"animate-pulse mx-2\" icon={faSearch} />\n        {buttonLabel}\n      </Button>\n    </fieldset>\n  </form>\n);\nComponent.displayName = 'BirthForm';\n\nexport default Component;\n","/* eslint-disable no-bitwise */\nimport { Personality, types } from '@kurone-kito/dantalion-core';\nimport { Base64 } from 'js-base64';\nimport chunk from 'lodash.chunk';\n\nexport interface PSWithName extends Personality {\n  readonly name?: string;\n}\n\nconst xor = (list: number[]) => list.reduce((acc, cur) => acc ^ cur, 0xf);\n\nconst psFromArray = (array: number[]): Personality => ({\n  cycle: array[3] + 1,\n  inner: types.genius[array[0]],\n  lifeBase: types.lifeBase[array[6]],\n  outer: types.genius[array[1]],\n  potentials: [types.potential[array[4]], types.potential[array[5]]],\n  workStyle: types.genius[array[2]],\n});\n\nconst psToArray = (ps: Personality) => [\n  types.genius.indexOf(ps.inner),\n  types.genius.indexOf(ps.outer),\n  types.genius.indexOf(ps.workStyle),\n  ps.cycle - 1,\n  types.potential.indexOf(ps.potentials[0]),\n  types.potential.indexOf(ps.potentials[1]),\n  types.lifeBase.indexOf(ps.lifeBase),\n];\n\nexport const decode = (str: string): Personality | undefined => {\n  const raw = [...Base64.toUint8Array(str)];\n  const src = raw.flatMap((b) => [b & 0xf, (b >> 4) & 0xf]);\n  if (!src.length) {\n    return undefined;\n  }\n  const [v, [cd]] = chunk(src, 7);\n  return xor(v) === cd ? psFromArray(v) : undefined;\n};\n\nexport const encode = (ps: Personality): string => {\n  const v = psToArray(ps);\n  const bytes = chunk([...v, xor(v)], 2).map((byte) =>\n    byte.reduce((acc, cur, index) => acc + (cur << (index * 4)), 0)\n  );\n  return Base64.fromUint8Array(new Uint8Array(bytes), true);\n};\n","import { useRouter } from 'next/router';\nimport { useCallback } from 'react';\nimport useIsSsr from './useIsSsr';\n\n/** Type definition of the arguments for the routing function. */\nexport interface RouteProps {\n  /** If you need the change language, specify them. */\n  readonly lang?: string;\n  /** If you need the change result, specify them. */\n  readonly result?: string;\n}\n\n/** Type definition of the routing function. */\nexport type Route = (props?: RouteProps) => Promise<boolean>;\n\n/** The query elements list to ignore. */\nconst excludes = Object.freeze(['genius', 'lang']);\n\n/** Detect the language from the query. */\nexport const useLanguage = (): string | undefined => {\n  const { query } = useRouter();\n  return typeof query.lang === 'string' ? query.lang : undefined;\n};\n\n/** Detect the personality result from the query. */\nexport const useResultQuery = (): string | undefined => {\n  const isSsr = useIsSsr();\n  const { query } = useRouter();\n  return isSsr(true)\n    ? Object.keys(query).find((q) => !excludes.includes(q))\n    : undefined;\n};\n\n/** Create the route function. */\nexport const useRoute = (): Route => {\n  const defaultLang = useLanguage();\n  const defaultResult = useResultQuery();\n  const router = useRouter();\n  return useCallback<Route>(\n    ({ result = defaultResult, lang = defaultLang } = {}) =>\n      router.push(\n        {\n          query: {\n            ...(lang ? { lang } : undefined),\n            ...(result ? { [result]: '' } : undefined),\n          },\n          pathname: lang ? '/[lang]' : `/`,\n        },\n        undefined,\n        { scroll: true, shallow: true }\n      ),\n    [defaultLang, defaultResult, router]\n  );\n};\n","import { getPersonality, Personality } from '@kurone-kito/dantalion-core';\nimport { Base64 } from 'js-base64';\nimport { FormEventHandler, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { FormState } from '../stores/FormReducer';\nimport { decode, encode } from '../utils/psCompress';\nimport { useResultQuery, useRoute } from './useQuery';\n\n/** The splitter that between to personality code and nickname. */\nexport const spliter = '~';\n\n/** It's the React custom hook which it decodes to personality code. */\nexport const usePSDecoder = (): readonly [Personality | undefined, string] => {\n  const [pb = '', nb] = (useResultQuery() ?? '').split(spliter);\n  const { t } = useTranslation();\n  return [\n    decode(pb),\n    (nb && Base64.decode(nb)) || t('web.result.nickname'),\n  ] as const;\n};\n\n/**\n * It's the React custom hook which it encodes to personality code\n * and redirects.\n * @param props Specifies the store object.\n */\nexport const usePSRedirection = ({\n  birthday,\n  nickname,\n}: FormState): FormEventHandler<HTMLFormElement> => {\n  const route = useRoute();\n  return useCallback(\n    async (e) => {\n      e.preventDefault();\n      const ps = getPersonality(birthday);\n      const n = Base64.encode(nickname, true);\n      return ps && route({ result: `${encode(ps)}${n && `${spliter}${n}`}` });\n    },\n    [birthday, nickname, route]\n  );\n};\n","import { Reducer, useReducer } from 'react';\nimport { createContainer } from 'unstated-next';\n\nexport const setBirthday = Symbol('setBirthday');\n\nexport const setNickname = Symbol('setNickname');\n\nconst defaultBirthday = '2000-01-01';\n\nexport type FormActionType = typeof setBirthday | typeof setNickname;\n\nexport type FormAction = readonly [FormActionType, string | undefined];\n\nexport interface FormState {\n  readonly birthday: string;\n  readonly nickname: string;\n}\n\nconst formReducer: Reducer<FormState, FormAction> = (\n  state,\n  [type, payload]\n) => {\n  switch (type) {\n    case setBirthday:\n      return { ...state, birthday: payload ?? defaultBirthday };\n    case setNickname:\n      return { ...state, nickname: payload ?? '' };\n    default:\n      return state;\n  }\n};\n\nexport default createContainer(() =>\n  useReducer(formReducer, { birthday: defaultBirthday, nickname: '' })\n);\n","import { ChangeEventHandler, useCallback, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport BirthForm from '../molecules/BirthForm';\nimport { usePSRedirection } from '../../hooks/usePersonality';\nimport FormReducer, {\n  setBirthday,\n  setNickname,\n} from '../../stores/FormReducer';\n\n/** The birthday form component. */\nconst Component: VFC = () => {\n  const { t } = useTranslation();\n  const [state, action] = FormReducer.useContainer();\n  return (\n    <BirthForm\n      birthday={state.birthday}\n      birthdayLabel={t('web.form.birthday')}\n      buttonLabel={t('web.form.submit')}\n      legendLabel={t('web.form.legend')}\n      nickname={state.nickname}\n      nicknameLabel={t('web.form.nickname')}\n      notes={t('web.form.notes', { returnObjects: true })}\n      onChangeBirthday={useCallback<ChangeEventHandler<HTMLInputElement>>(\n        (e) => action([setBirthday, e.currentTarget.value]),\n        [action]\n      )}\n      onChangeNickname={useCallback<ChangeEventHandler<HTMLInputElement>>(\n        (e) => action([setNickname, e.currentTarget.value]),\n        [action]\n      )}\n      onSubmit={usePSRedirection(state)}\n    />\n  );\n};\nComponent.displayName = 'BirthForm';\n\nexport default Component;\n","import Head from 'next/head';\nimport type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Specifies the page name. */\n  readonly pageName?: string;\n}\n\nconst Component: VFC<Props> = ({ appName, pageName }) => (\n  <Head>\n    <title>{(pageName ? [pageName, appName] : [appName]).join('::')}</title>\n  </Head>\n);\nComponent.displayName = 'Title';\n\nexport default Component;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Specifies the author name. */\n  readonly author?: string;\n  /** Specifies the theme color. */\n  readonly color?: string;\n  /**\n   * Specifies the short description of the document.\n   *\n   * (limit to 150 characters)\n   */\n  readonly description?: string;\n  /** Specifies the keywords. */\n  readonly keywords?: readonly string[];\n}\n\n/** The minimum metadata component. */\nconst Component: VFC<Props> = ({\n  appName,\n  author,\n  color,\n  description,\n  keywords,\n}) => (\n  <>\n    <meta httpEquiv=\"cleartype\" content=\"on\" />\n    <meta httpEquiv=\"x-ua-compatible\" content=\"ie=Edge\" />\n    {!!appName && <meta name=\"application-name\" content={appName} />}\n    {!!author && <meta name=\"author\" content={author} />}\n    <meta name=\"color-scheme\" content=\"only light\" />\n    <meta name=\"coverage\" content=\"Worldwide\" />\n    {!!description && <meta name=\"description\" content={description} />}\n    <meta name=\"format-detection\" content=\"telephone=no\" />\n    {!!keywords?.length && <meta name=\"keywords\" content={keywords.join()} />}\n    <meta name=\"rating\" content=\"General\" />\n    <meta name=\"referer\" content=\"same-origin\" />\n    <meta name=\"SKYPE_TOOLBAR\" content=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n    {!!color && <meta name=\"theme-color\" content={color} />}\n  </>\n);\nComponent.displayName = 'CommonMeta';\n\nexport default Component;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the base URL. */\n  readonly baseUrl?: string;\n}\n\n/** The root path. */\nconst root = '/';\n\n/** The links list component. */\nconst Component: VFC<Props> = ({ baseUrl = '' }) => {\n  const rootUrl = baseUrl || root;\n  return (\n    <>\n      <link rel=\"author\" href=\"https://kit.black/\" />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={`${baseUrl}/favicons/apple-touch-icon.png`}\n      />\n      <link rel=\"bookmark\" href={rootUrl} />\n      <link rel=\"canonical\" href={rootUrl} />\n      <link rel=\"first\" href={rootUrl} />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href={`${baseUrl}/favicons/favicon-32x32.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"194x194\"\n        href={`${baseUrl}/favicons/favicon-194x194.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"192x192\"\n        href={`${baseUrl}/favicons/android-chrome-192x192.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href={`${baseUrl}/favicons/favicon-16x16.png`}\n      />\n      <link rel=\"manifest\" href={`${baseUrl}/favicons/site.webmanifest`} />\n      <link\n        rel=\"mask-icon\"\n        href={`${baseUrl}/favicons/safari-pinned-tab.svg`}\n        color=\"#374151\"\n      />\n      <link rel=\"shortcut icon\" href={`${baseUrl}/favicons/favicon.ico`} />\n    </>\n  );\n};\nComponent.displayName = 'Links';\n\nexport default Component;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Specifies the theme color. */\n  readonly color?: string;\n  /** Specifies the short description. */\n  readonly description?: string;\n  /** Specifies the base URL. */\n  readonly baseUrl?: string;\n}\n\n/** The component of metadata for mobile browser. */\nconst Component: VFC<Props> = ({\n  appName,\n  color,\n  description,\n  baseUrl = '',\n}) => (\n  <>\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\" />\n    {!!appName && <meta name=\"apple-mobile-web-app-title\" content={appName} />}\n    {!!color && (\n      <>\n        <meta name=\"msapplication-navbutton-color\" content={color} />\n        <meta name=\"msapplication-TileColor\" content={color} />\n      </>\n    )}\n    {!!baseUrl && <meta name=\"msapplication-starturl\" content={baseUrl} />}\n    {!!description && (\n      <meta name=\"msapplication-tooltip\" content={description} />\n    )}\n    <meta\n      name=\"msapplication-config\"\n      content={`${baseUrl}/favicons/browserconfig.xml`}\n    />\n  </>\n);\nComponent.displayName = 'MobileMeta';\n\nexport default Component;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Whether the page is articles. */\n  readonly article?: boolean;\n  /** Specifies the banner height. */\n  readonly bannerHeight?: number;\n  /** Specifies the banner URL. */\n  readonly bannerUrl?: string;\n  /** Specifies the banner width. */\n  readonly bannerWidth?: number;\n  /** Short description of the document (limit to 150 characters) */\n  readonly description?: string;\n  /** Specifies the page name. */\n  readonly pageName?: string;\n}\n\n/** The component of metadata for social site. */\nconst Component: VFC<Props> = ({\n  appName,\n  article,\n  bannerHeight,\n  bannerUrl,\n  bannerWidth,\n  description,\n  pageName,\n}) => (\n  <>\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:creator\" content=\"@kurone_kito\" />\n    {!!description && <meta name=\"twitter:description\" content={description} />}\n    {!!bannerUrl && <meta name=\"twitter:image\" content={bannerUrl} />}\n    {!!pageName && <meta name=\"twitter:title\" content={pageName} />}\n    {!!description && <meta property=\"og:description\" content={description} />}\n    {!!bannerUrl && (\n      <>\n        <meta property=\"og:image\" content={bannerUrl} />\n        {!!bannerHeight && (\n          <meta property=\"og:image:height\" content={`${bannerHeight}`} />\n        )}\n        {!!bannerWidth && (\n          <meta property=\"og:image:width\" content={`${bannerWidth}`} />\n        )}\n      </>\n    )}\n    {!!appName && <meta property=\"og:site_name\" content={appName} />}\n    {!!pageName && <meta property=\"og:title\" content={pageName} />}\n    <meta property=\"og:type\" content={article ? 'article' : 'website'} />\n    <meta property=\"op:markup_version\" content=\"v1.0\" />\n  </>\n);\nComponent.displayName = 'OpenGraphMeta';\n\nexport default Component;\n","import type { VFC } from 'react';\nimport CommonMeta from '../atoms/head/CommonMeta';\nimport Links from '../atoms/head/Links';\nimport MobileMeta from '../atoms/head/MobileMeta';\nimport OpenGraphMeta from '../atoms/head/OpenGraphMeta';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Whether the page is articles. */\n  readonly article?: boolean;\n  /** Specifies the author name. */\n  readonly author?: string;\n  /** Specifies the banner height. */\n  readonly bannerHeight?: number;\n  /** Specifies the banner URL. */\n  readonly bannerPath?: string;\n  /** Specifies the banner width. */\n  readonly bannerWidth?: number;\n  /** Specifies the base URL. */\n  readonly baseUrl?: string;\n  /** Specifies the theme color. */\n  readonly color?: string;\n  /**\n   * Specifies the short description of the document.\n   *\n   * (limit to 150 characters)\n   */\n  readonly description?: string;\n  /** Specifies the keywords. */\n  readonly keywords?: readonly string[];\n  /** Specifies the page name. */\n  readonly pageName?: string;\n}\n\nconst Component: VFC<Props> = ({\n  appName,\n  article,\n  author,\n  bannerHeight,\n  bannerPath,\n  bannerWidth,\n  baseUrl = '',\n  color,\n  description,\n  keywords,\n  pageName,\n}) => (\n  <>\n    <CommonMeta\n      appName={appName}\n      author={author}\n      color={color}\n      description={description}\n      keywords={keywords}\n    />\n    <MobileMeta\n      appName={appName}\n      color={color}\n      description={description}\n      baseUrl={baseUrl}\n    />\n    <OpenGraphMeta\n      appName={appName}\n      article={article}\n      bannerHeight={bannerHeight}\n      bannerUrl={`${baseUrl}${bannerPath ?? ''}`}\n      bannerWidth={bannerWidth}\n      pageName={pageName}\n    />\n    <Links baseUrl={baseUrl} />\n  </>\n);\nComponent.displayName = 'HeadContents';\n\nexport default Component;\n","import Head from 'next/head';\nimport { useTranslation } from 'react-i18next';\nimport { VFC } from 'react';\nimport Title from '../atoms/head/Title';\nimport HeadContents from '../molecules/HeadContents';\n\n/** The web app name. */\nconst appName = 'Dantalion';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Whether the icon specifies as a superscript. */\n  readonly pageName?: string;\n}\n\nconst Component: VFC<Props> = ({ pageName = '' }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Title appName={appName} pageName={pageName} />\n      <Head>\n        <HeadContents\n          baseUrl={process.env.assetPrefix}\n          author={`${t('web.author')}, @kurone_kito`}\n          appName={appName}\n          article={!!pageName}\n          bannerHeight={630}\n          bannerPath=\"/favicons/ogp.png\"\n          bannerWidth={1200}\n          color=\"#E5E7EB\"\n          description={t('web.description')}\n          keywords={[\n            'ba-zi',\n            'bazi',\n            'birthday',\n            'cancode',\n            'chinese-astrology',\n            'divination',\n            'four-pillars',\n            'library',\n            'self-assessment',\n            'ziweidoushu',\n            'zodiac',\n            '占い',\n            '自己分析',\n            '誕生日',\n          ]}\n          pageName={pageName}\n        />\n      </Head>\n    </>\n  );\n};\nComponent.displayName = 'Head';\n\nexport default Component;\n","import type { ChangeEventHandler, ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the default value. */\n  readonly defaultValue?: string;\n  /** Specifies the ID. */\n  readonly id: string;\n  /** Specifies the label. */\n  readonly label?: ReactNode;\n  /** Callback to call when the user changes the control. */\n  readonly onChange?: ChangeEventHandler<HTMLSelectElement>;\n  /** Specifies the source. */\n  readonly source?: readonly (readonly [string, string] | string)[];\n}\n\n/** The select component. */\nconst Component: VFC<Props> = ({\n  defaultValue,\n  id,\n  label,\n  onChange,\n  source,\n}) => (\n  <label className=\"flex flex-col sm:flex-row sm:items-center\" htmlFor={id}>\n    <span className=\"font-bold mb-1 text-sm tracking-widest text-gray-700 sm:mb-0 sm:mr-8 sm:w-1/4\">\n      {label}\n    </span>\n    <div className=\"rounded-full duration-200 nm-flat-gray-200 flex-growhover:nm-flat-gray-50 sm:w-3/4\">\n      <select\n        className=\"appearance-none w-full px-8 py-4 bg-transparent font-semibold\"\n        defaultValue={defaultValue}\n        disabled={!source?.length}\n        id={id}\n        name={id}\n        onChange={onChange}\n        tabIndex={0}\n      >\n        {source?.map((item) => {\n          const [value, text] = typeof item === 'string' ? [item, item] : item;\n          return (\n            <option key={value} value={value}>\n              {text}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  </label>\n);\nComponent.displayName = 'Select';\n\nexport default Component;\n","import { locales } from '@kurone-kito/dantalion-i18n';\nimport { ChangeEventHandler, useCallback, useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLanguage, useRoute } from '../../hooks/useQuery';\nimport Select from '../atoms/Select';\n\ntype Source = readonly (readonly [string, string])[];\n\nconst autoKey = 'auto';\nconst baseSource: Source = Object.entries(locales);\n\nconst Component: VFC = () => {\n  const route = useRoute();\n  const { t } = useTranslation();\n  const language = useLanguage() ?? autoKey;\n  const onChange = useCallback<ChangeEventHandler<HTMLSelectElement>>(\n    (e) => {\n      e.preventDefault();\n      const { value } = e.currentTarget;\n      route({ lang: value === autoKey ? '' : value });\n    },\n    [route]\n  );\n  const source = useMemo<Source>(\n    () => [[autoKey, t('web.language.automatic')], ...baseSource],\n    [t]\n  );\n  return (\n    <Select\n      defaultValue={language}\n      id=\"language\"\n      label={t('web.language.name')}\n      onChange={onChange}\n      source={source}\n    />\n  );\n};\nComponent.displayName = 'LanguageSelector';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the main content */\n  readonly children?: ReactNode;\n}\n\n/** The frame of the results */\nconst Component: VFC<Props> = ({ children }) => (\n  <section className=\"mb-6 nm-inset-gray-200-xs p-4 rounded-xl md:px-6 md:rounded-3xl\">\n    {children}\n  </section>\n);\nComponent.displayName = 'ResultFrame';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport InlineMarkdown from './InlineMarkdown';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the additional information. */\n  readonly additional?: ReactNode;\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** Specifies the detail. */\n  readonly detail?: string;\n  /** Specifies the heading. */\n  readonly heading?: ReactNode;\n}\n\n/** The heading for result */\nconst Component: VFC<Props> = ({\n  additional,\n  children,\n  detail = '',\n  heading,\n}) => (\n  <header className=\"leading-loose mb-4\">\n    <h2 className=\"border-r-2 border-gray-300 inline mr-2 pr-2 text-gray-900\">\n      {heading}\n    </h2>\n    <p className=\"inline\">\n      <InlineMarkdown>{detail}</InlineMarkdown>\n    </p>\n    <hr className=\"border-gray-300 mb-6 mt-3\" />\n    <div className=\"p-0 text-2xl text-center sm:text-3xl\">\n      <h3 className=\"font-extrabold p-0\">{children}</h3>\n      {!!additional && <p className=\"font-extralight p-0\">{additional}</p>}\n    </div>\n  </header>\n);\nComponent.displayName = 'ResultHeading';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport ResultFrame from '../atoms/ResultFrame';\nimport ResultHeading from '../atoms/ResultHeading';\nimport InlineMarkdownList from './InlineMarkdownList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the main content */\n  readonly children?: ReactNode;\n  /** Specifies the heading */\n  readonly heading?: ReactNode;\n  /** Specifies the detail of heading */\n  readonly headingDetail?: string;\n  /** Specifies the hook text */\n  readonly hook?: ReactNode;\n  /** Specifies the additional hook text */\n  readonly hookAdditional?: ReactNode;\n  /** Specifies the more detail */\n  readonly moreDetail?: readonly string[];\n}\n\n/** The detail of result */\nconst Component: VFC<Props> = ({\n  children,\n  heading,\n  headingDetail,\n  hook,\n  hookAdditional,\n  moreDetail,\n}) => (\n  <ResultFrame>\n    <ResultHeading\n      additional={hookAdditional}\n      detail={headingDetail}\n      heading={heading}\n    >\n      {hook}\n    </ResultHeading>\n    <InlineMarkdownList className=\"leading-loose list-disc p-4 md:px-8\">\n      {moreDetail}\n    </InlineMarkdownList>\n    {children}\n  </ResultFrame>\n);\nComponent.displayName = 'ResultDetail';\n\nexport default Component;\n","import type { DetailsBaseType, DetailsType } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport InlineMarkdown from '../atoms/InlineMarkdown';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The resources of the content. */\n  readonly content: DetailsType;\n  /** The resources of the heading. */\n  readonly heading: DetailsBaseType;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result details component. */\nconst Component: VFC<Props> = ({ content, heading, nickname }) => {\n  const { t } = useTranslation();\n  return (\n    <ResultDetail\n      hookAdditional={<InlineMarkdown>{content.detail}</InlineMarkdown>}\n      heading={heading.name}\n      headingDetail={heading.detail}\n      hook={\n        <InlineMarkdown>\n          {t('web.result.probed', { nickname, type: content.name })}\n        </InlineMarkdown>\n      }\n      moreDetail={content.more}\n    />\n  );\n};\nComponent.displayName = 'ResultDetail';\n\nexport default Component;\n","import type { Detail } from '@kurone-kito/dantalion-core';\nimport type { Accessors } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport ResultDetail from './ResultDetail';\n\n/** Using keys for accessors. */\ntype Keys = 'brain' | 'communication' | 'management' | 'position' | 'response';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessors object. */\n  readonly accessors: Pick<Accessors, Keys>;\n  /** Specifies the details for personality. */\n  readonly details: Pick<Detail, Keys>;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The accompany results component. */\nconst Component: VFC<Props> = ({ accessors, nickname, details }) => (\n  <>\n    <ResultDetail\n      content={accessors.brain.getByKey(details.brain)}\n      heading={accessors.brain.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.communication.getByKey(details.communication)}\n      heading={accessors.communication.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.management.getByKey(details.management)}\n      heading={accessors.management.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.response.getByKey(details.response)}\n      heading={accessors.response.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.position.getByKey(details.position)}\n      heading={accessors.position.getCategoryDetail()}\n      nickname={nickname}\n    />\n  </>\n);\nComponent.displayName = 'AccompanyingResult';\n\nexport default Component;\n","import type {\n  DesctiptionsType,\n  PersonalityDetailType,\n  PersonalityType,\n} from '@kurone-kito/dantalion-i18n';\nimport { useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ReactMarkdown from 'react-markdown';\nimport Details from '../molecules/Details';\nimport InlineMarkdownList from '../molecules/InlineMarkdownList';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The resources of the descriptions. */\n  readonly descriptions: Pick<\n    DesctiptionsType,\n    'genius1' | 'genius2' | 'strategy' | 'weak'\n  >;\n  /** The resources of the personality details. */\n  readonly details: PersonalityDetailType;\n  /** The resources of the inner personality details. */\n  readonly inner: PersonalityType;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n  /** The resources of the outer personality details. */\n  readonly outer: Pick<PersonalityType, 'name' | 'summary'>;\n  /** The resources of the workStyle personality details. */\n  readonly workStyle: Pick<PersonalityType, 'name' | 'summary'>;\n}\n\n/** Create the source from props. */\nconst createSource = ({\n  inner,\n  outer,\n  workStyle,\n}: Pick<Props, 'inner' | 'outer' | 'workStyle'>) =>\n  (\n    [\n      ['inner', inner],\n      ['outer', outer],\n      ['workStyle', workStyle],\n    ] as const\n  ).map<readonly [string, string]>(([key, { summary, name }]) => [\n    `web.result.genius.${key}`,\n    `${summary} ... **${name}**`,\n  ]);\n\n/** The result component. */\nconst Component: VFC<Props> = ({\n  descriptions,\n  details,\n  inner,\n  nickname,\n  outer,\n  workStyle,\n}) => {\n  const { t } = useTranslation();\n  const source = useMemo(\n    () =>\n      createSource({ inner, outer, workStyle }).map(([key, type]) =>\n        t(key, { type })\n      ),\n    [inner, outer, t, workStyle]\n  );\n  return (\n    <ResultDetail\n      heading={details.name}\n      headingDetail={details.detail}\n      hook={\n        <>\n          {inner.summary}\n          <br />\n          {t('web.result.probed', { nickname, type: inner.name })}\n        </>\n      }\n      moreDetail={inner.detail}\n    >\n      <Details caption={descriptions.weak} tooltip={t('web.tooltip.summary')}>\n        {inner.weak}\n      </Details>\n      <Details\n        caption={descriptions.strategy}\n        tooltip={t('web.tooltip.summary')}\n      >\n        {inner.strategy}\n      </Details>\n      <hr className=\"border-gray-300 my-3\" />\n      <ReactMarkdown>{descriptions.genius1}</ReactMarkdown>\n      <InlineMarkdownList className=\"list-decimal p-4 md:px-8\" order>\n        {Object.values(details.descriptions)}\n      </InlineMarkdownList>\n      <ReactMarkdown>{descriptions.genius2}</ReactMarkdown>\n      <InlineMarkdownList className=\"list-decimal p-4 md:px-8\" order>\n        {source}\n      </InlineMarkdownList>\n    </ResultDetail>\n  );\n};\nComponent.displayName = 'GeniusResultDetail';\n\nexport default Component;\n","import type { LifeBase } from '@kurone-kito/dantalion-core';\nimport type {\n  DetailAccessor,\n  DetailsBaseType,\n} from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessor object */\n  readonly accessors: DetailAccessor<\n    DetailsBaseType<string[]>,\n    LifeBase,\n    string\n  >;\n  /** Specifies the lifebase value */\n  readonly lifeBase: LifeBase;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result component. */\nconst Component: VFC<Props> = ({ accessors, lifeBase, nickname }) => {\n  const { t } = useTranslation();\n  const { detail, name } = accessors.getByKey(lifeBase);\n  const desc = t<string, DetailsBaseType>('web.result.lifeBase', {\n    nickname,\n    returnObjects: true,\n  });\n  return (\n    <ResultDetail\n      heading={accessors.getCategoryDetail()}\n      headingDetail={desc.detail}\n      hook={desc.name}\n      hookAdditional={name}\n      moreDetail={detail}\n    />\n  );\n};\nComponent.displayName = 'LifeBaseResultDetail';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport List, { Props as ListProps } from '../atoms/List';\n\n/** Type definition of the required attributes. */\nexport interface Props extends Omit<ListProps, 'children'> {\n  /** The children items. */\n  readonly children?: readonly (readonly [ReactNode, ReactNode])[];\n}\n\n/** The generic list component which its items allow the Markdown format. */\nconst Component: VFC<Props> = ({ children, ...props }) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <List {...props}>\n    {children?.map(([caption, content], index) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <section className=\"text-xl\" key={index}>\n        <h2 className=\"inline font-extrabold\">{caption}</h2>\n        <p className=\"inline ml-3\">{content}</p>\n      </section>\n    ))}\n  </List>\n);\nComponent.displayName = 'TupleList';\n\nexport default Component;\n","import type { Motivation } from '@kurone-kito/dantalion-core';\nimport type { DetailAccessor } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport ResultFrame from '../atoms/ResultFrame';\nimport TupleList from '../molecules/TupleList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessor object */\n  readonly accessors: DetailAccessor<string, Motivation, string>;\n  /** Specifies the motivation value */\n  readonly motivation: Motivation;\n}\n\n/** The result component. */\nconst Component: VFC<Props> = ({ accessors, motivation }) => (\n  <ResultFrame>\n    <TupleList className=\"list-disc pl-8\">\n      {[[accessors.getCategoryDetail(), accessors.getByKey(motivation)]]}\n    </TupleList>\n  </ResultFrame>\n);\nComponent.displayName = 'MotivationResultDetail';\n\nexport default Component;\n","import type { Potential } from '@kurone-kito/dantalion-core';\nimport type { DetailAccessor } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessor object */\n  readonly accessors: DetailAccessor<\n    readonly string[],\n    readonly [Potential, Potential]\n  >;\n  /** Specifies the lifebase value */\n  readonly potentials: readonly [Potential, Potential];\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result component. */\nconst Component: VFC<Props> = ({ accessors, potentials, nickname }) => {\n  const { t } = useTranslation();\n  const desc = accessors.getCategoryDetail();\n  return (\n    <ResultDetail\n      heading={desc.name}\n      headingDetail={desc.detail}\n      hook={t('web.result.potential', { nickname })}\n      moreDetail={accessors.getByKey(potentials)}\n    />\n  );\n};\nComponent.displayName = 'LifeBaseResultDetail';\n\nexport default Component;\n","import type { ReactNode, VFC } from 'react';\nimport InlineMarkdown from '../atoms/InlineMarkdown';\nimport ResultFrame from '../atoms/ResultFrame';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the heading. */\n  readonly caption?: ReactNode;\n  /** The children items. */\n  readonly children?: string;\n}\n\n/** The personality file component */\nconst Component: VFC<Props> = ({ caption, children }) => (\n  <ResultFrame>\n    {caption}:&nbsp;<InlineMarkdown>{`\\`${children}\\``}</InlineMarkdown>\n  </ResultFrame>\n);\nComponent.displayName = 'PersonalityFileId';\n\nexport default Component;\n","import { Personality, toCC } from '@kurone-kito/dantalion-core';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport PersonalityFileId from '../molecules/PersonalityFileId';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The details for Personality. */\n  readonly personality: Personality;\n}\n\n/** The personality file component */\nconst Component: VFC<Props> = ({ personality }) => {\n  const { t } = useTranslation();\n  return (\n    <PersonalityFileId caption={t('web.result.profile')}>\n      {toCC(personality)}\n    </PersonalityFileId>\n  );\n};\nComponent.displayName = 'PersonalityFileId';\n\nexport default Component;\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { stringify } from 'qs';\nimport type { ReactNode, VFC } from 'react';\nimport Anchor from '../atoms/Anchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** The hashtag. */\n  readonly hashtag?: string;\n  /** The content. */\n  readonly text: string;\n  /** URL. */\n  readonly url?: string;\n}\n\n/**\n * Create the Tweet button URL.\n * @param props The props.\n */\nconst createUrl = ({ hashtag, text, url }: Omit<Props, 'children'>) =>\n  [\n    'https://twitter.com/intent/tweet',\n    stringify({ button_hashtag: hashtag, url, text }, { addQueryPrefix: true }),\n  ].join('');\n\n/** Tweet button component. */\nconst Component: VFC<Props> = ({ children, ...props }) => (\n  <p className=\"text-center mb-4 select-none\">\n    <Anchor\n      className=\"block duration-200 ease-in-out flex-grow font-bold leading-5 nm-flat-indigo-100 px-8 py-4 rounded-full text-md sm:text-xl tracking-widest transform transition uppercase hover:nm-flat-blue-50-lg\"\n      href={createUrl(props)}\n      noblank\n      nofollow\n    >\n      <FontAwesomeIcon className=\"animate-pulse mx-2\" icon={faTwitter} />\n      {children}\n    </Anchor>\n  </p>\n);\nComponent.displayName = 'TweetButton';\n\nexport default Component;\n","import type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport TweetButton from '../molecules/TweetButton';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The hook text. */\n  readonly hooks?: string;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** Tweet button component. */\nconst Component: VFC<Props> = ({ hooks, nickname }) => {\n  const { t } = useTranslation();\n  return (\n    <TweetButton\n      hashtag={t('web.share.hashtag')}\n      text={[t('web.result.heading', { nickname }), hooks].join('\\n')}\n      url={window.location.href}\n    >\n      {t('web.share.tweet')}\n    </TweetButton>\n  );\n};\nComponent.displayName = 'TweetButton';\n\nexport default Component;\n","import type { Vector } from '@kurone-kito/dantalion-core';\nimport type { Accessors } from '@kurone-kito/dantalion-i18n';\nimport type { ReactNode, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Details from '../molecules/Details';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The accessor for vector. */\n  readonly accessor: Accessors['vector'];\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n  /** The strategy details. */\n  readonly strategy?: ReactNode;\n  /** The vector type. */\n  readonly vector: Vector;\n}\n\n/** The detail component. */\nconst Component: VFC<Props> = ({ accessor, nickname, strategy, vector }) => {\n  const { t } = useTranslation();\n  const heading = accessor.getCategoryDetail();\n  const detail = accessor.getByKey(vector);\n  return (\n    <ResultDetail\n      heading={heading.name}\n      headingDetail={heading.detail}\n      hook={t('web.result.probed', { nickname, type: detail.name })}\n      moreDetail={detail.detail}\n    >\n      <Details caption={strategy} tooltip={t('web.tooltip.summary')}>\n        {detail.strategy}\n      </Details>\n    </ResultDetail>\n  );\n};\nComponent.displayName = 'VectorResultDetail';\n\nexport default Component;\n","import { getDetail } from '@kurone-kito/dantalion-core';\nimport { createAccessors } from '@kurone-kito/dantalion-i18n';\nimport { useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { usePSDecoder } from '../../hooks/usePersonality';\nimport AccompanyingResult from './AccompanyingResult';\nimport GeniusResultDetail from './GeniusResultDetail';\nimport LifeBaseResultDetail from './LifeBaseResultDetail';\nimport MotivationResultDetail from './MotivationResultDetail';\nimport PotentialResultDetail from './PotentialResultDetail';\nimport PersonalityFileId from './PersonalityFileId';\nimport TweetButton from './TweetButton';\nimport VectorResultDetail from './VectorResultDetail';\n\n/** The result component. */\nconst Component: VFC = () => {\n  const { t } = useTranslation();\n  const accessors = useMemo(() => createAccessors(t), [t]);\n  const [ps, nickname] = usePSDecoder();\n  const dt = ps && getDetail(ps.inner);\n  return ps && dt ? (\n    <>\n      <article>\n        <VectorResultDetail\n          accessor={accessors.vector}\n          nickname={nickname}\n          strategy={accessors.getDescription().strategy}\n          vector={dt.vector}\n        />\n        <GeniusResultDetail\n          descriptions={accessors.getDescription()}\n          details={accessors.genius.getCategoryDetail()}\n          inner={accessors.genius.getByKey(ps.inner)}\n          nickname={nickname}\n          outer={accessors.genius.getByKey(ps.outer)}\n          workStyle={accessors.genius.getByKey(ps.workStyle)}\n        />\n        <LifeBaseResultDetail\n          accessors={accessors.lifeBase}\n          lifeBase={ps.lifeBase}\n          nickname={nickname}\n        />\n        <PotentialResultDetail\n          accessors={accessors.potential}\n          potentials={ps.potentials}\n          nickname={nickname}\n        />\n        <MotivationResultDetail\n          accessors={accessors.motivation}\n          motivation={dt.motivation}\n        />\n        <AccompanyingResult\n          accessors={accessors}\n          details={dt}\n          nickname={nickname}\n        />\n        <PersonalityFileId personality={ps} />\n      </article>\n      <aside>\n        <TweetButton\n          nickname={nickname}\n          hooks={accessors.genius.getByKey(ps.inner).summary}\n        />\n      </aside>\n    </>\n  ) : null;\n};\nComponent.displayName = 'Result';\n\nexport default Component;\n","import { createAccessors } from '@kurone-kito/dantalion-i18n';\nimport { useTranslation } from 'react-i18next';\nimport { useMemo, VFC } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Anchor from '../atoms/Anchor';\nimport Header from '../atoms/Header';\nimport Article from '../molecules/Article';\nimport Footer from '../molecules/Footer';\nimport BirthForm from '../organisms/BirthForm';\nimport Head from '../organisms/Head';\nimport LanguageSelector from '../organisms/LanguageSelector';\nimport Result from '../organisms/Result';\nimport { usePSDecoder } from '../../hooks/usePersonality';\nimport FormReducer from '../../stores/FormReducer';\n\nconst Component: VFC = () => {\n  const { t } = useTranslation();\n  const accessors = useMemo(() => createAccessors(t), [t]);\n  const [ps, nickname] = usePSDecoder();\n  return (\n    <>\n      <Head pageName={ps && accessors.genius.getByKey(ps.inner).summary} />\n      <Header>\n        {ps ? t('web.result.heading', { nickname }) : t('web.description')}\n      </Header>\n      <main className=\"md:container mx-auto text-gray-600\">\n        <Result />\n        <FormReducer.Provider>\n          <BirthForm />\n        </FormReducer.Provider>\n        <Article\n          featureBody={t('web.feature.body', { returnObjects: true })}\n          featureHeading={t('web.feature.title')}\n          tooltipFeatureDetails={t('web.tooltip.summary')}\n        >\n          {t('web.preface', { joinArrays: '\\n\\n' })}\n        </Article>\n        <ReactMarkdown className=\"mx-0 my-5 nm-inset-gray-500-sm overflow-auto p-6 text-white md:rounded-3xl\">\n          {t('web.install', { joinArrays: '\\n' })}\n        </ReactMarkdown>\n        <p className=\"font-bold text-center text-xl py-6\">\n          <Anchor href=\"https://github.com/kurone-kito/dantalion\">\n            {t('web.seeRepo')}\n          </Anchor>\n        </p>\n      </main>\n      <Footer author={t('web.author')}>\n        <LanguageSelector />\n      </Footer>\n    </>\n  );\n};\nComponent.displayName = 'Template';\n\nexport default Component;\n"],"sourceRoot":""}