{"version":3,"sources":["webpack://_N_E/./src/components/atoms/Anchor.tsx","webpack://_N_E/./src/components/atoms/Header.tsx","webpack://_N_E/./src/components/atoms/InlineMarkdown.tsx","webpack://_N_E/./src/components/atoms/List.tsx","webpack://_N_E/./src/components/molecules/InlineMarkdownList.tsx","webpack://_N_E/./src/components/molecules/Details.tsx","webpack://_N_E/./src/components/molecules/IconAnchor.tsx","webpack://_N_E/./src/components/molecules/ExternalAnchor.tsx","webpack://_N_E/./src/components/molecules/Article.tsx","webpack://_N_E/./src/components/atoms/Logo.tsx","webpack://_N_E/./src/components/molecules/FooterNavigation.tsx","webpack://_N_E/./src/components/molecules/Footer.tsx","webpack://_N_E/./src/components/atoms/Button.tsx","webpack://_N_E/./src/components/atoms/Input.tsx","webpack://_N_E/./src/components/molecules/BirthForm.tsx","webpack://_N_E/./src/utils/psCompress.ts","webpack://_N_E/./src/hooks/useQuery.ts","webpack://_N_E/./src/hooks/usePersonality.ts","webpack://_N_E/./src/stores/FormReducer.ts","webpack://_N_E/./src/components/organisms/BirthForm.tsx","webpack://_N_E/./src/utils/createTitle.ts","webpack://_N_E/./src/components/atoms/head/Title.tsx","webpack://_N_E/./src/components/atoms/head/CommonMeta.tsx","webpack://_N_E/./src/components/atoms/head/Links.tsx","webpack://_N_E/./src/components/atoms/head/MobileMeta.tsx","webpack://_N_E/./src/components/atoms/head/OpenGraphMeta.tsx","webpack://_N_E/./src/components/molecules/HeadContents.tsx","webpack://_N_E/./src/components/organisms/Head.tsx","webpack://_N_E/./src/components/atoms/Select.tsx","webpack://_N_E/./src/components/organisms/AppearanceSelector.tsx","webpack://_N_E/./src/components/organisms/LanguageSelector.tsx","webpack://_N_E/./src/components/atoms/ResultFrame.tsx","webpack://_N_E/./src/components/atoms/ResultHeading.tsx","webpack://_N_E/./src/components/molecules/ResultDetail.tsx","webpack://_N_E/./src/components/organisms/ResultDetail.tsx","webpack://_N_E/./src/components/organisms/AccompanyingResult.tsx","webpack://_N_E/./src/components/organisms/GeniusResultDetail.tsx","webpack://_N_E/./src/components/organisms/LifeBaseResultDetail.tsx","webpack://_N_E/./src/components/molecules/TupleList.tsx","webpack://_N_E/./src/components/organisms/MotivationResultDetail.tsx","webpack://_N_E/./src/components/organisms/PotentialResultDetail.tsx","webpack://_N_E/./src/components/molecules/PersonalityFileId.tsx","webpack://_N_E/./src/components/organisms/PersonalityFileId.tsx","webpack://_N_E/./src/components/organisms/SubGeniusResultDetail.tsx","webpack://_N_E/./src/components/molecules/TweetButton.tsx","webpack://_N_E/./src/components/organisms/TweetButton.tsx","webpack://_N_E/./src/components/organisms/VectorResultDetail.tsx","webpack://_N_E/./src/components/organisms/Result.tsx","webpack://_N_E/./src/components/templates/Template.tsx"],"names":["Anchor","children","className","href","noblank","nofollow","tooltip","classNames","rel","tabIndex","title","target","displayName","Header","role","aria-label","InlineMarkdown","components","props","p","c","List","itemType","Parent","order","Item","Children","map","child","index","InlineMarkdownList","Details","caption","headingLevel","Heading","open","IconAnchor","icon","iconClassName","sup","Sup","ExternalAnchor","faExternalLinkAlt","Article","featureBody","featureHeading","tooltipFeatureDetails","a","node","linkTarget","Logo","xmlns","viewBox","d","transform","FooterNavigation","author","faTwitter","faGithub","faYoutube","faHome","Footer","Button","onClick","type","Input","id","label","htmlFor","BirthForm","birthday","birthdayLabel","buttonLabel","legendLabel","nickname","nicknameLabel","onChangeBirthday","onChangeNickname","onSubmit","notes","autoComplete","defaultValue","enterKeyHint","max","min","name","onChange","required","maxLength","placeholder","faSearch","xor","list","reduce","acc","cur","decode","str","src","Base64","flatMap","b","length","array","chunk","v","cd","cycle","inner","types","lifeBase","outer","potentials","workStyle","undefined","encode","ps","psToArray","bytes","byte","Uint8Array","excludes","Object","freeze","useGenius","query","useRouter","result","genius","lang","Number","isNaN","parseInt","useLanguage","useResultQuery","isSsr","useIsSsr","keys","find","q","includes","createQuery","createPathName","useRoute","defaultGenius","defaultLang","defaultResult","router","useCallback","push","pathname","scroll","shallow","usePSRedirection","route","e","preventDefault","getPersonality","n","setBirthday","Symbol","setNickname","defaultBirthday","formReducer","state","payload","createContainer","useReducer","t","useTranslation","FormReducer","useContainer","action","returnObjects","currentTarget","value","appName","pageName","join","Title","createTitle","CommonMeta","color","description","keywords","dangerouslySetInnerHTML","__html","process","httpEquiv","content","Links","baseUrl","rootUrl","sizes","MobileMeta","OpenGraphMeta","article","bannerHeight","bannerUrl","bannerWidth","property","HeadContents","bannerPath","Head","Select","source","disabled","item","text","AppearanceSelector","root","window","document","getElementsByTagName","localStorage","removeItem","matchMedia","matches","classList","add","remove","theme","useMemo","key","autoKey","baseSource","entries","locales","LanguageSelector","language","i18n","nextLang","changeLanguage","getLocale","useOnChange","ResultFrame","ResultHeading","additional","detail","heading","ResultDetail","headingDetail","hook","hookAdditional","moreDetail","more","AccompanyingResult","accessors","details","brain","getByKey","getCategoryDetail","communication","management","response","position","GeniusResultDetail","descriptions","summary","weak","strategy","LifeBaseResultDetail","desc","TupleList","MotivationResultDetail","motivation","PersonalityFileId","personality","toCC","SubGeniusResultDetail","genius1","values","genius2","createUrl","hashtag","url","stringify","button_hashtag","addQueryPrefix","TweetButton","hooks","location","VectorResultDetail","accessor","vector","Result","createAccessors","getDescription","geniusDetails","innerDetail","PotentialResultDetail","potential","Template","split","pb","nb","usePSDecoder","concreteInner","dt","getDetail","Provider","joinArrays"],"mappings":"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","file":"static/chunks/587-7d65c49154cb813d1183.js","sourcesContent":["import classNames, { Argument } from 'classnames';\nimport type { ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children: ReactNode;\n  /** If you need the CSS classes, specify them. */\n  readonly className?: Argument;\n  /** The URL. */\n  readonly href: string;\n  /** Whether the component remove a target attribute. */\n  readonly noblank?: boolean;\n  /** Whether the component specifies a “nofflow” flag. */\n  readonly nofollow?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/** The anchor component */\nconst Anchor: VFC<Props> = ({\n  children,\n  className,\n  href,\n  noblank,\n  nofollow,\n  tooltip,\n}) => (\n  // eslint-disable-next-line react/jsx-no-target-blank\n  <a\n    className={classNames(\n      'text-blue-800 dark:text-blue-300 dark:hover:text-blue-100 hover:text-blue-500',\n      className\n    )}\n    href={href}\n    rel={classNames('noopener noreferrer', { nofollow })}\n    tabIndex={0}\n    title={tooltip}\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    {...(noblank ? {} : { target: '_blank' })}\n  >\n    {children}\n  </a>\n);\nAnchor.displayName = 'Anchor';\n\nexport default Anchor;\n","import type { ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n}\n\n/** The header component */\nconst Header: VFC<Props> = ({ children }) => (\n  <header className=\"text-gray-700 dark:text-gray-200\">\n    <h1\n      className=\"font-thin py-10 text-4xl text-center sm:text-6xl\"\n      role=\"banner\"\n    >\n      <i aria-label=\"Lion\" className=\"not-italic\" role=\"img\">\n        🦁\n      </i>\n      Dantalion:\n      <wbr />\n      &nbsp;\n      {children}\n    </h1>\n  </header>\n);\nHeader.displayName = 'Header';\n\nexport default Header;\n","import type { VFC } from 'react';\nimport ReactMarkdown, { ReactMarkdownOptions } from 'react-markdown';\n\n/** The inline markdown component */\nconst InlineMarkdown: VFC<ReactMarkdownOptions> = ({\n  children,\n  components,\n  ...props\n}) => (\n  <ReactMarkdown\n    className=\"markdown text-gray-700 dark:text-gray-200\"\n    components={{ p: ({ children: c }) => <>{c}</>, ...components }}\n    // eslint-disable-next-line react/jsx-props-no-spreading\n    {...props}\n  >\n    {children}\n  </ReactMarkdown>\n);\nInlineMarkdown.displayName = 'InlineMarkdown';\n\nexport default InlineMarkdown;\n","import {\n  Children,\n  ComponentType,\n  LiHTMLAttributes,\n  ReactNodeArray,\n  VFC,\n} from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNodeArray;\n  /** If you need the CSS classes, specify them. */\n  readonly className?: string;\n  /** If you need a list item component, specify it. */\n  readonly itemType?: ComponentType<LiHTMLAttributes<HTMLLIElement>>;\n  /** Whether the use as an order list. */\n  readonly order?: boolean;\n}\n\n/** The generical list component */\nconst List: VFC<Props> = ({ children, className, itemType, order }) => {\n  const Parent = order ? 'ol' : 'ul';\n  const Item = itemType ?? 'li';\n  return (\n    <Parent className={className}>\n      {Children.toArray(children).map((child, index) => (\n        // eslint-disable-next-line react/no-array-index-key\n        <Item key={index}>{child}</Item>\n      ))}\n    </Parent>\n  );\n};\nList.displayName = 'List';\n\nexport default List;\n","import type { VFC } from 'react';\nimport InlineMarkdown from '../atoms/InlineMarkdown';\nimport List, { Props as ListProps } from '../atoms/List';\n\n/** Type definition of the required attributes. */\nexport interface Props extends Omit<ListProps, 'children'> {\n  /** The children items. */\n  readonly children?: readonly string[];\n}\n\n/** The generic list component which its items allow the Markdown format. */\nconst InlineMarkdownList: VFC<Props> = ({ children, ...props }) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <List {...props}>\n    {children?.map((child) => (\n      <InlineMarkdown key={child}>{child}</InlineMarkdown>\n    ))}\n  </List>\n);\nInlineMarkdownList.displayName = 'InlineMarkdownList';\n\nexport default InlineMarkdownList;\n","import type { ReactNode, VFC } from 'react';\nimport InlineMarkdownList from './InlineMarkdownList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The caption. */\n  readonly caption?: ReactNode;\n  /** The children items. */\n  readonly children?: readonly string[];\n  /** The heading level. */\n  readonly headingLevel?: 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6';\n  /** Whether that expand automatically. */\n  readonly open?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/**\n * The collapsable list component which its items allow the Markdown format.\n */\nconst Details: VFC<Props> = ({\n  caption,\n  children,\n  headingLevel: Heading = 'h4',\n  open,\n  tooltip,\n}) => (\n  <details\n    className=\"my-5 nm-flat-gray-200-sm rounded-2xl dark:nm-flat-gray-700-sm md:mx-1 md:rounded-3xl\"\n    open={open}\n  >\n    <summary\n      className=\"bg-gray-200 cursor-pointer duration-200 ease-in-out outline-none px-8 py-4 rounded-2xl select-none text-gray-700 text-xl transform transition dark:bg-gray-700 dark:text-gray-200 dark:focus:bg-gray-800 focus:bg-gray-100 dark:hover:bg-gray-800 hover:bg-gray-100 md:rounded-3xl sm:text-2xl\"\n      tabIndex={0}\n      title={tooltip}\n    >\n      <Heading className=\"font-bold inline\">{caption}</Heading>\n    </summary>\n    <div className=\"border-gray-500 border-opacity-50 border-t-2 mx-4 overflow-y-scroll p-2\">\n      <InlineMarkdownList className=\"list-disc p-4 md:px-8\">\n        {children}\n      </InlineMarkdownList>\n    </div>\n  </details>\n);\nDetails.displayName = 'Details';\n\nexport default Details;\n","import type { IconProp } from '@fortawesome/fontawesome-svg-core';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type { ReactNode, VFC } from 'react';\nimport Anchor from '../atoms/Anchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** The URL. */\n  readonly href: string;\n  /** The icon. */\n  readonly icon: IconProp;\n  /** If you need the CSS classes for icon, specify them. */\n  readonly iconClassName?: string;\n  /** Whether the component specifies a “nofflow” flag. */\n  readonly nofollow?: boolean;\n  /** Whether the icon specifies as a superscript. */\n  readonly sup?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/** The footer component */\nconst IconAnchor: VFC<Props> = ({\n  children,\n  href,\n  icon,\n  iconClassName,\n  nofollow,\n  sup,\n  tooltip,\n}) => {\n  const Sup = sup ? 'sup' : 'span';\n  return (\n    <Anchor href={href} nofollow={nofollow} tooltip={tooltip}>\n      {children && <span className=\"mr-1\">{children}</span>}\n      <Sup>\n        <FontAwesomeIcon icon={icon} className={iconClassName} />\n      </Sup>\n    </Anchor>\n  );\n};\nIconAnchor.displayName = 'IconAnchor';\n\nexport default IconAnchor;\n","import { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\nimport type { ReactNode, VFC } from 'react';\nimport IconAnchor from './IconAnchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** The URL. */\n  readonly href: string;\n  /** Whether the component specifies a “nofflow” flag. */\n  readonly nofollow?: boolean;\n  /** The tooltip on hover. */\n  readonly tooltip?: string;\n}\n\n/** The external anchor component */\nconst ExternalAnchor: VFC<Props> = ({ children, href, nofollow, tooltip }) => (\n  <IconAnchor\n    href={href}\n    icon={faExternalLinkAlt}\n    iconClassName=\"opacity-70 text-xs\"\n    nofollow={nofollow}\n    sup\n    tooltip={tooltip}\n  >\n    {children}\n  </IconAnchor>\n);\nExternalAnchor.displayName = 'ExternalAnchor';\n\nexport default ExternalAnchor;\n","import type { ReactNode, VFC } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Details from './Details';\nimport ExternalAnchor from './ExternalAnchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the main article text as a Markdown format */\n  readonly children: string;\n  /** Specifies the body of feature text */\n  readonly featureBody?: string[];\n  /** Specifies the heading of feature text */\n  readonly featureHeading?: ReactNode;\n  /** The tooltip on hover the feature. */\n  readonly tooltipFeatureDetails?: string;\n}\n\n/** The main article component */\nconst Article: VFC<Props> = ({\n  children,\n  featureBody,\n  featureHeading,\n  tooltipFeatureDetails,\n}) => (\n  <article>\n    <ReactMarkdown\n      components={{\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        a: ({ children: c, href }) => (\n          <ExternalAnchor href={href as string} nofollow>\n            {c}\n          </ExternalAnchor>\n        ),\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        p: ({ node, ...props }) => <p className=\"py-3\" {...props} />,\n      }}\n      className=\"font-light leading-loose markdown p-3 text-gray-700 text-lg dark:text-gray-200 sm:px-2\"\n      linkTarget=\"_blank\"\n    >\n      {children}\n    </ReactMarkdown>\n    <Details\n      caption={featureHeading}\n      headingLevel=\"h2\"\n      tooltip={tooltipFeatureDetails}\n    >\n      {featureBody}\n    </Details>\n  </article>\n);\nArticle.displayName = 'Article';\n\nexport default Article;\n","import type { VFC } from 'react';\n\nconst Logo: VFC = () => (\n  <svg\n    className=\"h-full w-full\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 960 190\"\n  >\n    <desc>Dantalion</desc>\n    <path\n      d=\"M316,526V336h829V526Zm100.5-93.9c-2.8-.5-5.3-1.4-7.9-1.4-19.8-.1-39.6-.7-59.4.2-16.2.8-24.9,10.5-26,26.7a86.8,86.8,0,0,0,.1,12.5c1.1,15.5,8.9,25.2,24.2,26.1a476,476,0,0,0,60.9,0c15.7-.9,24.1-11.3,24.3-27s.4-34.3-.1-51.5c-.5-15.6-10.1-25.7-25.6-27.8a65,65,0,0,0-9.9-.6h-63l-5.1.2V404h63.4a72.8,72.8,0,0,1,10.4.8c7.6,1.2,12.8,5.7,13.6,12.6C416.9,422.1,416.5,427,416.5,432.1Zm363,0c-2.5-.5-5-1.4-7.4-1.4-20-.1-40-.8-59.9.2-16.4.9-25.1,11-25.8,27.4a96.1,96.1,0,0,0,.1,12c.9,14.5,7.7,22.6,22,25.6a79.3,79.3,0,0,0,16.9,1.5c15-.1,30,.2,44.9-.9,16.4-1.2,25.3-11.2,25.6-27.6s.4-34-.2-51-11.2-27.7-28.2-28.2c-24.6-.6-49.3-.3-74-.3a5.6,5.6,0,0,0-1.5.4V404h64.2a55.1,55.1,0,0,1,9.9.8c6.8,1.2,12.1,4.7,13.2,11.8C780.1,421.5,779.5,426.8,779.5,432.1Zm192.6,65.5c19.5.8,37.8-15.4,39.7-35.1a202.2,202.2,0,0,0,0-38.9c-1.7-18-12.4-30.2-30.3-32.8-14.3-2.1-29.2-2-43.7-1-18.7,1.4-32.2,15-33.8,33.7a235.6,235.6,0,0,0,0,39.4c1.3,17.2,17.9,32.9,34.4,33.7M466,497v-5.7c0-21-.1-42,.1-63,0-13.2,6.3-21,19.2-22.6,9.9-1.2,20-.9,29.9-.8,16.8.2,25,8.7,25,25.6v61c0,1.7.2,3.5.3,5.8,4.8,0,9.1.2,13.4-.2.9,0,2.5-2,2.5-3.1.1-23.6.5-47.3-.4-71-.7-18.1-13.4-31.4-31.6-33a222.4,222.4,0,0,0-40.8-.2c-21,1.9-33.6,16.5-33.7,37.6s0,43.6,0,65.5a30.5,30.5,0,0,0,.3,4.1Zm669.4-1a1.8,1.8,0,0,0,.4-1.3c0-23.5.4-47-.2-70.5-.5-18.7-13.3-32.6-32-34.4a222.5,222.5,0,0,0-37.4-.6c-24.4,1.8-36.9,16.2-36.9,40.8,0,20.5,0,41-.3,61.5V497h17V428.2c.1-12.8,6.2-21,18.6-22.3a173.6,173.6,0,0,1,33.8-.5c14.6,1.4,20.6,9.4,20.6,24.2V496ZM617,405h53.1c0-4-.2-7.5.1-11s-1.4-4.8-5-4.8c-14.2.2-28.4.1-42.6.1L617,389V364H601v25.2c-9,0-17.4-.2-25.9.1-1.4.1-3.8,1.7-3.9,2.8-.5,4.1-.2,8.2-.2,12.9h30.3v6.4c.1,19.9-.2,39.8.3,59.7.3,12.8,7.5,23.8,19.5,25.6,14.1,2.2,28.6,1,42.9,1.8V482.7c-9.4,0-18.4.1-27.4,0-14.1-.1-19.5-5.5-19.6-19.5M834,497V354H819V497Zm31.1-2.1c.4,1,1.6,2.4,2.4,2.4,4.5.3,9,.1,13.5.1V392H865m16-37H865v22h16Z\"\n      className=\"fill-current text-gray-700 dark:text-gray-200\"\n      transform=\"translate(-185 -336)\"\n    />\n    <path\n      d=\"M258,354.9c28.7,1,45.3,16.7,47,45.3a339.8,339.8,0,0,1-1.2,58.8c-2.4,21.9-18.6,36.1-40.8,37.5-19.3,1.2-38.6.7-57.9.9H185V354m17,17V482.2c20.7-.6,41.2-.2,61.5-1.9,13.7-1,22.7-9.8,26.1-23.4a52.3,52.3,0,0,0,1.5-11.8c.2-13,.3-26,0-39-.4-22-12.1-34.4-34.2-35.4\"\n      className=\"fill-current text-gray-700 dark:text-gray-200\"\n      transform=\"translate(-185 -336)\"\n    />\n    <path\n      d=\"M403.4,443.5c9.5.5,13.1,4.6,13.2,13.9,0,3.8.1,7.6-.1,11.5-.5,7.3-3.8,11.5-11,12.7a127.4,127.4,0,0,1-16.3,1c-10.2.2-20.3.2-30.5,0a60.7,60.7,0,0,1-10.3-1.4,10.6,10.6,0,0,1-4.8-2.5c-7.2-7.6-5.1-16.9-3.7-25.5,1.2-6.9,7.4-9.2,13.7-9.5\"\n      className=\"fill-current text-gray-700 dark:text-gray-200\"\n      transform=\"translate(-185 -336)\"\n    />\n    <path\n      d=\"M766.4,443.6c9.2.4,12.8,4.5,12.9,13.5.1,4.4.1,8.7-.2,13-.5,6.2-4,10.3-10.1,11.4a104.2,104.2,0,0,1-14.8,1.1q-16.2.3-32.4,0a41.3,41.3,0,0,1-9.9-1.2c-6.1-1.4-9.3-5.3-9.8-11.6a80.4,80.4,0,0,1-.3-11c.4-9.6,4.6-14.5,14.3-15\"\n      className=\"fill-current text-gray-700 dark:text-gray-200\"\n      transform=\"translate(-185 -336)\"\n    />\n    <path\n      d=\"M919.5,443.3v-13c.1-13.3,7.3-23.4,20.4-24.8a166.8,166.8,0,0,1,36.7.3c12.2,1.5,19.4,11,19.8,23.4q.5,13.9,0,27.9c-.5,14.1-10.2,23.8-24.6,24.4-9.5.4-19,.4-28.4,0-14.8-.6-23.8-10.4-23.9-25.2Z\"\n      className=\"fill-current text-gray-700 dark:text-gray-200\"\n      transform=\"translate(-185 -336)\"\n    />\n  </svg>\n);\nLogo.displayName = 'Logo';\n\nexport default Logo;\n","import {\n  faGithub,\n  faTwitter,\n  faYoutube,\n} from '@fortawesome/free-brands-svg-icons';\nimport { faHome } from '@fortawesome/free-solid-svg-icons';\nimport classNames from 'classnames';\nimport type { ReactNode, VFC } from 'react';\nimport List from '../atoms/List';\nimport IconAnchor from './IconAnchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the author-name */\n  readonly author?: ReactNode;\n}\n\n/** The footer component */\nconst FooterNavigation: VFC<Props> = ({ author }) => (\n  <List\n    className=\"divide-x-2 divide-gray-500 divide-opacity-50 flex flex-row justify-center p-4\"\n    itemType={({ className, ...props }) => (\n      <li\n        className={classNames('place-self-center px-3', className)}\n        // eslint-disable-next-line react/jsx-props-no-spreading\n        {...props}\n      />\n    )}\n  >\n    <>&copy; {author}</>\n    <IconAnchor\n      href=\"https://twitter.com/kurone_kito\"\n      icon={faTwitter}\n      tooltip=\"Twitter\"\n    />\n    <IconAnchor\n      href=\"https://github.com/kurone-kito\"\n      icon={faGithub}\n      tooltip=\"GitHub\"\n    />\n    <IconAnchor\n      href=\"https://www.youtube.com/channel/UCJs_ejHQM0rcemJaeO2s5vA\"\n      icon={faYoutube}\n      tooltip=\"YouTube\"\n    />\n    <IconAnchor href=\"https://kit.black/\" icon={faHome} tooltip=\"Homepage\" />\n  </List>\n);\nFooterNavigation.displayName = 'FooterNavigation';\n\nexport default FooterNavigation;\n","import { Children, ReactNode, ReactNodeArray, VFC } from 'react';\nimport Logo from '../atoms/Logo';\nimport FooterNavigation from './FooterNavigation';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the author name. */\n  readonly author?: ReactNode;\n  /** The children items. */\n  readonly children?: ReactNodeArray;\n}\n\n/** The footer component */\nconst Footer: VFC<Props> = ({ author, children }) => (\n  <footer\n    className=\"nm-flat-gray-300-xs mt-4 py-4 text-gray-700 text-sm dark:nm-flat-gray-600-xs dark:text-gray-200\"\n    role=\"contentinfo\"\n  >\n    <nav className=\"flex flex-col mx-auto sm:flex-row lg:container\">\n      <div className=\"hidden flex-shrink xl:block\">\n        <Logo />\n      </div>\n      <div className=\"flex flex-grow items-center justify-center\">\n        <FooterNavigation author={author} />\n      </div>\n      <div className=\"flex flex-col flex-shrink p-4 lg:flex-row\">\n        {Children.toArray(children).map((child, index) => (\n          // eslint-disable-next-line react/no-array-index-key\n          <div className=\"flex-shrink p-4\" key={index}>\n            {child}\n          </div>\n        ))}\n      </div>\n    </nav>\n  </footer>\n);\nFooter.displayName = 'Footer';\n\nexport default Footer;\n","import classNames, { Argument } from 'classnames';\nimport type { MouseEventHandler, ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items */\n  readonly children?: ReactNode;\n  /** If you need the CSS classes, specify them */\n  readonly className?: Argument;\n  /** Callback to call when the user taps */\n  readonly onClick?: MouseEventHandler<HTMLButtonElement>;\n}\n\n/** The button component */\nconst Button: VFC<Props> = ({ children, className, onClick }) => (\n  <div className={classNames('flex justify-center pt-8', className)}>\n    <button\n      className=\"duration-200 ease-in-out flex-grow font-bold leading-5 nm-flat-gray-300 px-8 py-4 rounded-full text-gray-800 tracking-widest transform transition uppercase dark:nm-flat-gray-600 dark:text-gray-300 dark:hover:nm-flat-gray-800-lg dark:hover:text-gray-100 hover:nm-flat-gray-50-lg hover:text-gray-900\"\n      onClick={onClick}\n      tabIndex={0}\n      type=\"submit\"\n    >\n      {children}\n    </button>\n  </div>\n);\nButton.displayName = 'Button';\n\nexport default Button;\n","import type { InputHTMLAttributes, ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props\n  extends Omit<InputHTMLAttributes<HTMLInputElement>, 'className'> {\n  /** The label for control */\n  readonly label?: ReactNode;\n}\n\n/** The input control component */\nconst Input: VFC<Props> = ({ id, label, ...props }) => (\n  <label\n    className=\"flex flex-col my-4 sm:flex-row sm:items-center\"\n    htmlFor={id}\n  >\n    <span className=\"font-bold mb-1 text-sm tracking-widest text-gray-700 dark:text-gray-200 sm:mb-0 sm:mr-8 sm:w-1/3\">\n      {label}\n    </span>\n    <input\n      className=\"appearance-none duration-200 flex-grow leading-5 mr-1 w-full nm-inset-gray-100 px-8 py-4 rounded-full text-gray-800 dark:nm-inset-gray-600 dark:text-gray-100 dark:focus:nm-inset-gray-800 dark:hover:nm-inset-gray-800 focus:nm-inset-gray-50 hover:nm-inset-gray-50 sm:w-2/3\"\n      id={id}\n      tabIndex={0}\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...props}\n    />\n  </label>\n);\nInput.displayName = 'Input';\n\nexport default Input;\n","import { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport type {\n  ChangeEventHandler,\n  FormEventHandler,\n  ReactNode,\n  ReactNodeArray,\n  VFC,\n} from 'react';\nimport Button from '../atoms/Button';\nimport Input from '../atoms/Input';\nimport List from '../atoms/List';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The default birthday value string */\n  readonly birthday?: string;\n  /** The label for birthday input control */\n  readonly birthdayLabel?: string;\n  /** The label for button control */\n  readonly buttonLabel?: ReactNode;\n  /** The form title */\n  readonly legendLabel?: ReactNode;\n  /** The default nickname value string */\n  readonly nickname?: string;\n  /** The label for nickname input control */\n  readonly nicknameLabel?: string;\n  /** The default nickname value string */\n  readonly notes?: ReactNodeArray;\n  /** Callback to call when the user changes the birthday */\n  readonly onChangeBirthday?: ChangeEventHandler<HTMLInputElement>;\n  /** Callback to call when the user changes the nickname */\n  readonly onChangeNickname?: ChangeEventHandler<HTMLInputElement>;\n  /** Callback to call when the user taps to submit button */\n  readonly onSubmit?: FormEventHandler<HTMLFormElement>;\n}\n\n/** The birthday form component. */\nconst BirthForm: VFC<Props> = ({\n  birthday,\n  birthdayLabel,\n  buttonLabel,\n  legendLabel,\n  nickname,\n  nicknameLabel,\n  onChangeBirthday,\n  onChangeNickname,\n  onSubmit,\n  notes,\n}) => (\n  <form\n    className=\"nm-flat-gray-300-xs p-6 dark:nm-flat-gray-600-xs md:rounded-3xl\"\n    onSubmit={onSubmit}\n  >\n    <fieldset>\n      <legend className=\"font-light text-gray-700 text-xl dark:text-gray-200\">\n        {legendLabel}\n      </legend>\n      <Input\n        autoComplete=\"bday\"\n        defaultValue={birthday}\n        enterKeyHint=\"go\"\n        id=\"birthday\"\n        label={birthdayLabel}\n        max=\"2050-12-31\"\n        min=\"1873-02-01\"\n        name=\"birthday\"\n        onChange={onChangeBirthday}\n        required\n        type=\"date\"\n      />\n      <Input\n        autoComplete=\"nickname\"\n        defaultValue={nickname}\n        enterKeyHint=\"go\"\n        id=\"nickname\"\n        label={nicknameLabel}\n        maxLength={240}\n        name=\"nickname\"\n        onChange={onChangeNickname}\n        placeholder={nicknameLabel}\n        type=\"text\"\n      />\n      <List className=\"text-red-900 text-sm dark:text-red-200\">{notes}</List>\n      <Button>\n        <FontAwesomeIcon className=\"animate-pulse mx-2\" icon={faSearch} />\n        {buttonLabel}\n      </Button>\n    </fieldset>\n  </form>\n);\nBirthForm.displayName = 'BirthForm';\n\nexport default BirthForm;\n","/* eslint-disable no-bitwise */\nimport { Personality, types } from '@kurone-kito/dantalion-core';\nimport { Base64 } from 'js-base64';\nimport chunk from 'lodash.chunk';\n\nexport interface PSWithName extends Personality {\n  readonly name?: string;\n}\n\nconst xor = (list: number[]) => list.reduce((acc, cur) => acc ^ cur, 0xf);\n\nconst psFromArray = (array: number[]): Personality => ({\n  cycle: array[3] + 1,\n  inner: types.genius[array[0]],\n  lifeBase: types.lifeBase[array[6]],\n  outer: types.genius[array[1]],\n  potentials: [types.potential[array[4]], types.potential[array[5]]],\n  workStyle: types.genius[array[2]],\n});\n\nconst psToArray = (ps: Personality) => [\n  types.genius.indexOf(ps.inner),\n  types.genius.indexOf(ps.outer),\n  types.genius.indexOf(ps.workStyle),\n  ps.cycle - 1,\n  types.potential.indexOf(ps.potentials[0]),\n  types.potential.indexOf(ps.potentials[1]),\n  types.lifeBase.indexOf(ps.lifeBase),\n];\n\nexport const decode = (str: string): Personality | undefined => {\n  const raw = [...Base64.toUint8Array(str)];\n  const src = raw.flatMap((b) => [b & 0xf, (b >> 4) & 0xf]);\n  if (!src.length) {\n    return undefined;\n  }\n  const [v, [cd]] = chunk(src, 7);\n  return xor(v) === cd ? psFromArray(v) : undefined;\n};\n\nexport const encode = (ps: Personality): string => {\n  const v = psToArray(ps);\n  const bytes = chunk([...v, xor(v)], 2).map((byte) =>\n    byte.reduce((acc, cur, index) => acc + (cur << (index * 4)), 0)\n  );\n  return Base64.fromUint8Array(new Uint8Array(bytes), true);\n};\n","import type { Genius } from '@kurone-kito/dantalion-core';\nimport { useRouter } from 'next/router';\nimport type { ParsedUrlQueryInput } from 'querystring';\nimport { useCallback } from 'react';\nimport useIsSsr from './useIsSsr';\n\n/** Type definition of the arguments for the routing function. */\nexport interface RouteProps {\n  /** If you need the change inner genius, specify them. */\n  readonly genius?: Genius;\n  /** If you need the change language, specify them. */\n  readonly lang?: string;\n  /** If you need the change result, specify them. */\n  readonly result?: string;\n}\n\n/** Type definition of the routing function. */\nexport type Route = (props?: RouteProps) => Promise<boolean>;\n\n/** The query elements list to ignore. */\nconst excludes = Object.freeze(['genius', 'lang']);\n\n/** Detect the language from the query. */\nexport const useGenius = (): Genius | undefined => {\n  const { query } = useRouter();\n  const result = query.genius ?? query.lang;\n  return typeof result === 'string' &&\n    !Number.isNaN(Number.parseInt(result, 10))\n    ? (result as Genius)\n    : undefined;\n};\n\n/** Detect the language from the query. */\nexport const useLanguage = (): string | undefined => {\n  const { query } = useRouter();\n  const genius = useGenius();\n  const { lang } = query;\n  return typeof lang === 'string' && !(genius && genius === lang)\n    ? lang\n    : undefined;\n};\n\n/** Detect the personality result from the query. */\nexport const useResultQuery = (): string | undefined => {\n  const isSsr = useIsSsr();\n  const { query } = useRouter();\n  return isSsr(true)\n    ? Object.keys(query).find((q) => !excludes.includes(q))\n    : undefined;\n};\n\n/**\n * Create the query parameters for routing.\n * @param props The arguments.\n */\nconst createQuery = ({\n  genius,\n  result,\n  lang,\n}: RouteProps): ParsedUrlQueryInput => ({\n  ...(genius && lang ? { genius, lang } : undefined),\n  ...((lang || genius) && !(genius && lang)\n    ? { lang: lang || genius }\n    : undefined),\n  ...(result ? { [result]: '' } : undefined),\n});\n\n/**\n * Create the path name parameters for routing.\n * @param props The arguments.\n */\nconst createPathName = ({\n  genius,\n  lang,\n}: Pick<RouteProps, 'genius' | 'lang'>) =>\n  `/${lang || genius ? '[lang]' : ''}${lang && genius ? '/[genius]' : ''}`;\n\n/** Create the route function. */\nexport const useRoute = (): Route => {\n  const defaultGenius = useGenius();\n  const defaultLang = useLanguage();\n  const defaultResult = useResultQuery();\n  const router = useRouter();\n  return useCallback<Route>(\n    ({\n      genius = defaultGenius,\n      lang = defaultLang,\n      result = defaultResult,\n    } = {}) =>\n      router.push(\n        {\n          query: createQuery({ genius, lang, result }),\n          pathname: createPathName({ genius, lang }),\n        },\n        undefined,\n        { scroll: true, shallow: true }\n      ),\n    [defaultGenius, defaultLang, defaultResult, router]\n  );\n};\n","import { getPersonality, Personality } from '@kurone-kito/dantalion-core';\nimport { Base64 } from 'js-base64';\nimport { FormEventHandler, useCallback } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport type { FormState } from '../stores/FormReducer';\nimport { decode, encode } from '../utils/psCompress';\nimport { useResultQuery, useRoute } from './useQuery';\n\n/** The splitter that between to personality code and nickname. */\nexport const spliter = '~';\n\n/** It's the React custom hook which it decodes to personality code. */\nexport const usePSDecoder = (): readonly [Personality | undefined, string] => {\n  const [pb = '', nb] = (useResultQuery() ?? '').split(spliter);\n  const { t } = useTranslation();\n  return [\n    decode(pb),\n    (nb && Base64.decode(nb)) || t('web.result.nickname'),\n  ] as const;\n};\n\n/**\n * It's the React custom hook which it encodes to personality code\n * and redirects.\n * @param props Specifies the store object.\n */\nexport const usePSRedirection = ({\n  birthday,\n  nickname,\n}: FormState): FormEventHandler<HTMLFormElement> => {\n  const route = useRoute();\n  return useCallback(\n    async (e) => {\n      e.preventDefault();\n      const ps = getPersonality(birthday);\n      const n = Base64.encode(nickname, true);\n      return (\n        ps &&\n        route({\n          genius: ps.inner,\n          result: `${encode(ps)}${n && `${spliter}${n}`}`,\n        })\n      );\n    },\n    [birthday, nickname, route]\n  );\n};\n","import { Reducer, useReducer } from 'react';\nimport { createContainer } from 'unstated-next';\n\n/** A definition for the identifier is used to store the birthday. */\nexport const setBirthday = Symbol('setBirthday');\n\n/** A definition for the identifier is used to store the nickname. */\nexport const setNickname = Symbol('setNickname');\n\n/** Default birthday value. */\nconst defaultBirthday = '2000-01-01';\n\n/** The type definition of actions key. */\nexport type FormActionType = typeof setBirthday | typeof setNickname;\n\n/** The type definition of the action. */\nexport type FormAction = readonly [FormActionType, string | undefined];\n\n/** The type definition of the state data. */\nexport interface FormState {\n  /** The birthday. */\n  readonly birthday: string;\n  /** The nickname. */\n  readonly nickname: string;\n}\n\n/**\n * The reducer implementation for stores the birthday data.\n * @param state The current state data.\n * @param action The action data.\n * @returns The new state data.\n */\nconst formReducer: Reducer<FormState, FormAction> = (\n  state,\n  [type, payload]\n) => {\n  switch (type) {\n    case setBirthday:\n      return { ...state, birthday: payload ?? defaultBirthday };\n    case setNickname:\n      return { ...state, nickname: payload ?? '' };\n    default:\n      return state;\n  }\n};\n\nexport default createContainer(() =>\n  useReducer(formReducer, { birthday: defaultBirthday, nickname: '' })\n);\n","import { ChangeEventHandler, useCallback, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport MoleculesBirthForm from '../molecules/BirthForm';\nimport { usePSRedirection } from '../../hooks/usePersonality';\nimport FormReducer, {\n  setBirthday,\n  setNickname,\n} from '../../stores/FormReducer';\n\n/** The birthday form component. */\nconst BirthForm: VFC = () => {\n  const { t } = useTranslation();\n  const [state, action] = FormReducer.useContainer();\n  return (\n    <MoleculesBirthForm\n      birthday={state.birthday}\n      birthdayLabel={t('web.form.birthday')}\n      buttonLabel={t('web.form.submit')}\n      legendLabel={t('web.form.legend')}\n      nickname={state.nickname}\n      nicknameLabel={t('web.form.nickname')}\n      notes={t('web.form.notes', { returnObjects: true })}\n      onChangeBirthday={useCallback<ChangeEventHandler<HTMLInputElement>>(\n        (e) => action([setBirthday, e.currentTarget.value]),\n        [action]\n      )}\n      onChangeNickname={useCallback<ChangeEventHandler<HTMLInputElement>>(\n        (e) => action([setNickname, e.currentTarget.value]),\n        [action]\n      )}\n      onSubmit={usePSRedirection(state)}\n    />\n  );\n};\nBirthForm.displayName = 'BirthForm';\n\nexport default BirthForm;\n","/** Type definition of the options for `createTitle` function. */\nexport interface Options {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Specifies the page name. */\n  readonly pageName?: string;\n}\n\n/**\n * Create the title.\n * @param options The options.\n */\nconst createTitle = ({ appName, pageName }: Options = {}): string =>\n  (pageName ? [pageName, appName] : [appName]).join('::');\n\nexport default createTitle;\n","import Head from 'next/head';\nimport type { VFC } from 'react';\nimport createTitle, { Options } from '../../../utils/createTitle';\n\n/** Type definition of the required attributes. */\nexport type Props = Options;\n\n/** The page title component. */\nconst Title: VFC<Props> = (props) => (\n  <Head>\n    <title>{createTitle(props)}</title>\n  </Head>\n);\nTitle.displayName = 'Title';\n\nexport default Title;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Specifies the author name. */\n  readonly author?: string;\n  /** Specifies the theme color. */\n  readonly color?: string;\n  /**\n   * Specifies the short description of the document.\n   *\n   * (limit to 150 characters)\n   */\n  readonly description?: string;\n  /** Specifies the keywords. */\n  readonly keywords?: readonly string[];\n}\n\n/** The minimum metadata component. */\nconst CommonMeta: VFC<Props> = ({\n  appName,\n  author,\n  color,\n  description,\n  keywords,\n}) => (\n  <>\n    <script\n      type=\"text/javascript\"\n      // eslint-disable-next-line react/no-danger\n      dangerouslySetInnerHTML={{ __html: process.env.applyDarkMode ?? '' }}\n    />\n    <meta httpEquiv=\"cleartype\" content=\"on\" />\n    <meta httpEquiv=\"x-ua-compatible\" content=\"ie=Edge\" />\n    {!!appName && <meta name=\"application-name\" content={appName} />}\n    {!!author && <meta name=\"author\" content={author} />}\n    <meta name=\"color-scheme\" content=\"light dark\" />\n    <meta name=\"coverage\" content=\"Worldwide\" />\n    {!!description && <meta name=\"description\" content={description} />}\n    <meta name=\"format-detection\" content=\"telephone=no\" />\n    {!!keywords?.length && <meta name=\"keywords\" content={keywords.join()} />}\n    <meta name=\"rating\" content=\"General\" />\n    <meta name=\"referer\" content=\"same-origin\" />\n    <meta name=\"SKYPE_TOOLBAR\" content=\"SKYPE_TOOLBAR_PARSER_COMPATIBLE\" />\n    {!!color && <meta name=\"theme-color\" content={color} />}\n  </>\n);\nCommonMeta.displayName = 'CommonMeta';\n\nexport default CommonMeta;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the base URL. */\n  readonly baseUrl?: string;\n}\n\n/** The root path. */\nconst root = '/';\n\n/** The links list component. */\nconst Links: VFC<Props> = ({ baseUrl = '' }) => {\n  const rootUrl = baseUrl || root;\n  return (\n    <>\n      <link rel=\"author\" href=\"https://kit.black/\" />\n      <link\n        rel=\"apple-touch-icon\"\n        sizes=\"180x180\"\n        href={`${baseUrl}/favicons/apple-touch-icon.png`}\n      />\n      <link rel=\"bookmark\" href={rootUrl} />\n      <link rel=\"canonical\" href={rootUrl} />\n      <link rel=\"first\" href={rootUrl} />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"32x32\"\n        href={`${baseUrl}/favicons/favicon-32x32.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"194x194\"\n        href={`${baseUrl}/favicons/favicon-194x194.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"192x192\"\n        href={`${baseUrl}/favicons/android-chrome-192x192.png`}\n      />\n      <link\n        rel=\"icon\"\n        type=\"image/png\"\n        sizes=\"16x16\"\n        href={`${baseUrl}/favicons/favicon-16x16.png`}\n      />\n      <link rel=\"manifest\" href={`${baseUrl}/favicons/site.webmanifest`} />\n      <link\n        rel=\"mask-icon\"\n        href={`${baseUrl}/favicons/safari-pinned-tab.svg`}\n        color=\"#374151\"\n      />\n      <link rel=\"shortcut icon\" href={`${baseUrl}/favicons/favicon.ico`} />\n    </>\n  );\n};\nLinks.displayName = 'Links';\n\nexport default Links;\n","import type { VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Specifies the theme color. */\n  readonly color?: string;\n  /** Specifies the short description. */\n  readonly description?: string;\n  /** Specifies the base URL. */\n  readonly baseUrl?: string;\n}\n\n/** The component of metadata for mobile browser. */\nconst MobileMeta: VFC<Props> = ({\n  appName,\n  color,\n  description,\n  baseUrl = '',\n}) => (\n  <>\n    <meta name=\"apple-mobile-web-app-capable\" content=\"yes\" />\n    <meta name=\"apple-mobile-web-app-status-bar-style\" content=\"default\" />\n    {!!appName && <meta name=\"apple-mobile-web-app-title\" content={appName} />}\n    {!!color && (\n      <>\n        <meta name=\"msapplication-navbutton-color\" content={color} />\n        <meta name=\"msapplication-TileColor\" content={color} />\n      </>\n    )}\n    {!!baseUrl && <meta name=\"msapplication-starturl\" content={baseUrl} />}\n    {!!description && (\n      <meta name=\"msapplication-tooltip\" content={description} />\n    )}\n    <meta\n      name=\"msapplication-config\"\n      content={`${baseUrl}/favicons/browserconfig.xml`}\n    />\n  </>\n);\nMobileMeta.displayName = 'MobileMeta';\n\nexport default MobileMeta;\n","import type { VFC } from 'react';\nimport createTitle from '../../../utils/createTitle';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Whether the page is articles. */\n  readonly article?: boolean;\n  /** Specifies the banner height. */\n  readonly bannerHeight?: number;\n  /** Specifies the banner URL. */\n  readonly bannerUrl?: string;\n  /** Specifies the banner width. */\n  readonly bannerWidth?: number;\n  /** Short description of the document (limit to 150 characters) */\n  readonly description?: string;\n  /** Specifies the page name. */\n  readonly pageName?: string;\n}\n\n/** The component of metadata for social site. */\nconst OpenGraphMeta: VFC<Props> = ({\n  appName,\n  article,\n  bannerHeight,\n  bannerUrl,\n  bannerWidth,\n  description,\n  pageName = appName,\n}) => (\n  <>\n    <meta name=\"twitter:card\" content=\"summary_large_image\" />\n    <meta name=\"twitter:creator\" content=\"@kurone_kito\" />\n    {!!description && <meta name=\"twitter:description\" content={description} />}\n    {!!bannerUrl && <meta name=\"twitter:image\" content={bannerUrl} />}\n    {!!pageName && (\n      <meta name=\"twitter:title\" content={createTitle({ appName, pageName })} />\n    )}\n    {!!description && <meta property=\"og:description\" content={description} />}\n    {!!bannerUrl && (\n      <>\n        <meta property=\"og:image\" content={bannerUrl} />\n        {!!bannerHeight && (\n          <meta property=\"og:image:height\" content={`${bannerHeight}`} />\n        )}\n        {!!bannerWidth && (\n          <meta property=\"og:image:width\" content={`${bannerWidth}`} />\n        )}\n      </>\n    )}\n    {!!appName && <meta property=\"og:site_name\" content={appName} />}\n    {!!pageName && <meta property=\"og:title\" content={pageName} />}\n    <meta property=\"og:type\" content={article ? 'article' : 'website'} />\n    <meta property=\"op:markup_version\" content=\"v1.0\" />\n  </>\n);\nOpenGraphMeta.displayName = 'OpenGraphMeta';\n\nexport default OpenGraphMeta;\n","import type { VFC } from 'react';\nimport CommonMeta from '../atoms/head/CommonMeta';\nimport Links from '../atoms/head/Links';\nimport MobileMeta from '../atoms/head/MobileMeta';\nimport OpenGraphMeta from '../atoms/head/OpenGraphMeta';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the web app name. */\n  readonly appName?: string;\n  /** Whether the page is articles. */\n  readonly article?: boolean;\n  /** Specifies the author name. */\n  readonly author?: string;\n  /** Specifies the banner height. */\n  readonly bannerHeight?: number;\n  /** Specifies the banner URL. */\n  readonly bannerPath?: string;\n  /** Specifies the banner width. */\n  readonly bannerWidth?: number;\n  /** Specifies the base URL. */\n  readonly baseUrl?: string;\n  /** Specifies the theme color. */\n  readonly color?: string;\n  /**\n   * Specifies the short description of the document.\n   *\n   * (limit to 150 characters)\n   */\n  readonly description?: string;\n  /** Specifies the keywords. */\n  readonly keywords?: readonly string[];\n  /** Specifies the page name. */\n  readonly pageName?: string;\n}\n\nconst HeadContents: VFC<Props> = ({\n  appName,\n  article,\n  author,\n  bannerHeight,\n  bannerPath,\n  bannerWidth,\n  baseUrl = '',\n  color,\n  description,\n  keywords,\n  pageName,\n}) => (\n  <>\n    <CommonMeta\n      appName={appName}\n      author={author}\n      color={color}\n      description={description}\n      keywords={keywords}\n    />\n    <MobileMeta\n      appName={appName}\n      color={color}\n      description={description}\n      baseUrl={baseUrl}\n    />\n    <OpenGraphMeta\n      appName={appName}\n      article={article}\n      bannerHeight={bannerHeight}\n      bannerUrl={`${baseUrl}${bannerPath ?? ''}`}\n      bannerWidth={bannerWidth}\n      pageName={pageName}\n    />\n    <Links baseUrl={baseUrl} />\n  </>\n);\nHeadContents.displayName = 'HeadContents';\n\nexport default HeadContents;\n","import NextHead from 'next/head';\nimport { useTranslation } from 'react-i18next';\nimport { VFC } from 'react';\nimport Title from '../atoms/head/Title';\nimport HeadContents from '../molecules/HeadContents';\n\n/** The web app name. */\nconst appName = 'Dantalion';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Whether the icon specifies as a superscript. */\n  readonly pageName?: string;\n}\n\nconst Head: VFC<Props> = ({ pageName }) => {\n  const { t } = useTranslation();\n  return (\n    <>\n      <Title appName={appName} pageName={pageName} />\n      <NextHead>\n        <HeadContents\n          baseUrl={process.env.assetPrefix}\n          author={`${t('web.author')}, @kurone_kito`}\n          appName={appName}\n          article={!!pageName}\n          bannerHeight={630}\n          bannerPath=\"/favicons/ogp.png\"\n          bannerWidth={1200}\n          color=\"#E5E7EB\"\n          description={t('web.description')}\n          keywords={[\n            'ba-zi',\n            'bazi',\n            'birthday',\n            'cancode',\n            'chinese-astrology',\n            'divination',\n            'four-pillars',\n            'library',\n            'self-assessment',\n            'ziweidoushu',\n            'zodiac',\n            '占い',\n            '自己分析',\n            '誕生日',\n          ]}\n          pageName={pageName}\n        />\n      </NextHead>\n    </>\n  );\n};\nHead.displayName = 'Head';\n\nexport default Head;\n","import type { ChangeEventHandler, ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the default value. */\n  readonly defaultValue?: string;\n  /** Specifies the ID. */\n  readonly id: string;\n  /** Specifies the label. */\n  readonly label?: ReactNode;\n  /** Callback to call when the user changes the control. */\n  readonly onChange?: ChangeEventHandler<HTMLSelectElement>;\n  /** Specifies the source. */\n  readonly source?: readonly (readonly [string, string] | string)[];\n}\n\n/** The select component. */\nconst Select: VFC<Props> = ({ defaultValue, id, label, onChange, source }) => (\n  <label className=\"flex flex-col sm:flex-row sm:items-center\" htmlFor={id}>\n    <span className=\"font-bold mb-1 text-sm tracking-widest text-gray-700 dark:text-gray-200 sm:mb-0 sm:mr-8 sm:w-1/4\">\n      {label}\n    </span>\n    <div className=\"rounded-full duration-200 nm-flat-gray-200 flex-grow dark:nm-flat-gray-600  dark:hover:nm-flat-gray-800 hover:nm-flat-gray-50 sm:w-3/4\">\n      <select\n        className=\"appearance-none w-full px-8 py-4 bg-transparent font-semibold text-gray-800 dark:text-gray-100\"\n        defaultValue={defaultValue}\n        disabled={!source?.length}\n        id={id}\n        name={id}\n        onChange={onChange}\n        tabIndex={0}\n      >\n        {source?.map((item) => {\n          const [value, text] = typeof item === 'string' ? [item, item] : item;\n          return (\n            <option key={value} value={value}>\n              {text}\n            </option>\n          );\n        })}\n      </select>\n    </div>\n  </label>\n);\nSelect.displayName = 'Select';\n\nexport default Select;\n","import { ChangeEventHandler, useCallback, useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useIsSsr from '../../hooks/useIsSsr';\nimport Select from '../atoms/Select';\n\n/** The type definition of the source. */\ntype Source = readonly (readonly [string, string])[];\n\n/** Constant keys. */\nconst keys = ['automatic', 'light', 'dark'] as const;\n\n/** Create the callback on changed control by the user. */\nconst useOnChange = (): ChangeEventHandler<HTMLSelectElement> => {\n  return useCallback(async (e) => {\n    const root = window.document.getElementsByTagName('html')[0];\n    switch (e.currentTarget.value) {\n      case 'automatic':\n        localStorage.removeItem('theme');\n        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {\n          root.classList.add('dark');\n        } else {\n          root.classList.remove('dark');\n        }\n        break;\n      case 'dark':\n        localStorage.theme = 'dark';\n        root.classList.add('dark');\n        break;\n      case 'light':\n        localStorage.theme = 'light';\n        root.classList.remove('dark');\n        break;\n      default:\n        break;\n    }\n    e.preventDefault();\n  }, []);\n};\n\n/** The appearance select component. */\nconst AppearanceSelector: VFC = () => {\n  const { t } = useTranslation();\n  const isSsr = useIsSsr();\n  const onChange = useOnChange();\n  const source = useMemo<Source>(\n    () => keys.map((key) => [key, t(`web.appearance.${key}`)]),\n    [t]\n  );\n  return isSsr() ? null : (\n    <Select\n      defaultValue={!('theme' in localStorage) ? undefined : localStorage.theme}\n      id=\"appearance\"\n      label={t('web.appearance.name')}\n      onChange={onChange}\n      source={source}\n    />\n  );\n};\nAppearanceSelector.displayName = 'AppearanceSelector';\n\nexport default AppearanceSelector;\n","import { getLocale, locales } from '@kurone-kito/dantalion-i18n';\nimport { ChangeEventHandler, useCallback, useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLanguage, useRoute } from '../../hooks/useQuery';\nimport Select from '../atoms/Select';\n\n/** The type definition of the source. */\ntype Source = readonly (readonly [string, string])[];\n\n/** Constant key indicating automatic recognition. */\nconst autoKey = 'auto';\n\n/** The language list. */\nconst baseSource: Source = Object.entries(locales);\n\n/** Create the callback on changed control by the user. */\nconst useOnChange = (): ChangeEventHandler<HTMLSelectElement> => {\n  const route = useRoute();\n  const { i18n } = useTranslation();\n  return useCallback(\n    async (e) => {\n      e.preventDefault();\n      const { value } = e.currentTarget;\n      const nextLang = value === autoKey ? undefined : value;\n      await route({ lang: nextLang ?? '' });\n      await i18n.changeLanguage(nextLang ?? getLocale());\n    },\n    [i18n, route]\n  );\n};\n\n/** The language select component. */\nconst LanguageSelector: VFC = () => {\n  const { t } = useTranslation();\n  const language = useLanguage() ?? autoKey;\n  const onChange = useOnChange();\n  const source = useMemo<Source>(\n    () => [[autoKey, t('web.language.automatic')], ...baseSource],\n    [t]\n  );\n  return (\n    <Select\n      defaultValue={language}\n      id=\"language\"\n      label={t('web.language.name')}\n      onChange={onChange}\n      source={source}\n    />\n  );\n};\nLanguageSelector.displayName = 'LanguageSelector';\n\nexport default LanguageSelector;\n","import type { ReactNode, VFC } from 'react';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the main content */\n  readonly children?: ReactNode;\n}\n\n/** The frame of the results */\nconst ResultFrame: VFC<Props> = ({ children }) => (\n  <section className=\"mb-6 nm-inset-gray-200-xs p-4 rounded-xl text-gray-700 dark:nm-inset-gray-700-xs dark:text-gray-200 md:px-6 md:rounded-3xl\">\n    {children}\n  </section>\n);\nResultFrame.displayName = 'ResultFrame';\n\nexport default ResultFrame;\n","import type { ReactNode, VFC } from 'react';\nimport InlineMarkdown from './InlineMarkdown';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the additional information. */\n  readonly additional?: ReactNode;\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** Specifies the detail. */\n  readonly detail?: string;\n  /** Specifies the heading. */\n  readonly heading?: ReactNode;\n}\n\n/** The heading for result */\nconst ResultHeading: VFC<Props> = ({\n  additional,\n  children,\n  detail = '',\n  heading,\n}) => (\n  <header className=\"leading-loose mb-4\">\n    <div className=\"divide-x divide-gray-500 divide-opacity-50 flex\">\n      <h2 className=\"flex-grow-0 pr-4 text-gray-900 dark:text-gray-100\">\n        {heading}\n      </h2>\n      <p className=\"flex-grow pl-4\">\n        <InlineMarkdown>{detail}</InlineMarkdown>\n      </p>\n    </div>\n    <hr className=\"border-gray-500 border-opacity-50 mb-6 mt-3\" />\n    <div className=\"p-0 text-2xl text-center text-gray-700 dark:text-gray-200 sm:text-3xl\">\n      <h3 className=\"font-extrabold p-0\">{children}</h3>\n      {!!additional && <p className=\"font-extralight p-0\">{additional}</p>}\n    </div>\n  </header>\n);\nResultHeading.displayName = 'ResultHeading';\n\nexport default ResultHeading;\n","import type { ReactNode, VFC } from 'react';\nimport ResultFrame from '../atoms/ResultFrame';\nimport ResultHeading from '../atoms/ResultHeading';\nimport InlineMarkdownList from './InlineMarkdownList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the main content */\n  readonly children?: ReactNode;\n  /** Specifies the heading */\n  readonly heading?: ReactNode;\n  /** Specifies the detail of heading */\n  readonly headingDetail?: string;\n  /** Specifies the hook text */\n  readonly hook?: ReactNode;\n  /** Specifies the additional hook text */\n  readonly hookAdditional?: ReactNode;\n  /** Specifies the more detail */\n  readonly moreDetail?: readonly string[];\n}\n\n/** The detail of result */\nconst ResultDetail: VFC<Props> = ({\n  children,\n  heading,\n  headingDetail,\n  hook,\n  hookAdditional,\n  moreDetail,\n}) => (\n  <ResultFrame>\n    <ResultHeading\n      additional={hookAdditional}\n      detail={headingDetail}\n      heading={heading}\n    >\n      {hook}\n    </ResultHeading>\n    <InlineMarkdownList className=\"leading-loose list-disc p-4 md:px-8\">\n      {moreDetail}\n    </InlineMarkdownList>\n    {children}\n  </ResultFrame>\n);\nResultDetail.displayName = 'ResultDetail';\n\nexport default ResultDetail;\n","import type { DetailsBaseType, DetailsType } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport InlineMarkdown from '../atoms/InlineMarkdown';\nimport MoleculesResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The resources of the content. */\n  readonly content: DetailsType;\n  /** The resources of the heading. */\n  readonly heading: DetailsBaseType;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result details component. */\nconst ResultDetail: VFC<Props> = ({ content, heading, nickname }) => {\n  const { t } = useTranslation();\n  return (\n    <MoleculesResultDetail\n      hookAdditional={<InlineMarkdown>{content.detail}</InlineMarkdown>}\n      heading={heading.name}\n      headingDetail={heading.detail}\n      hook={\n        <InlineMarkdown>\n          {t('web.result.probed', { nickname, type: content.name })}\n        </InlineMarkdown>\n      }\n      moreDetail={content.more}\n    />\n  );\n};\nResultDetail.displayName = 'ResultDetail';\n\nexport default ResultDetail;\n","import type { Detail } from '@kurone-kito/dantalion-core';\nimport type { Accessors } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport ResultDetail from './ResultDetail';\n\n/** Using keys for accessors. */\ntype Keys = 'brain' | 'communication' | 'management' | 'position' | 'response';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessors object. */\n  readonly accessors: Pick<Accessors, Keys>;\n  /** Specifies the details for personality. */\n  readonly details: Pick<Detail, Keys>;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The accompany results component. */\nconst AccompanyingResult: VFC<Props> = ({ accessors, nickname, details }) => (\n  <>\n    <ResultDetail\n      content={accessors.brain.getByKey(details.brain)}\n      heading={accessors.brain.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.communication.getByKey(details.communication)}\n      heading={accessors.communication.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.management.getByKey(details.management)}\n      heading={accessors.management.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.response.getByKey(details.response)}\n      heading={accessors.response.getCategoryDetail()}\n      nickname={nickname}\n    />\n    <ResultDetail\n      content={accessors.position.getByKey(details.position)}\n      heading={accessors.position.getCategoryDetail()}\n      nickname={nickname}\n    />\n  </>\n);\nAccompanyingResult.displayName = 'AccompanyingResult';\n\nexport default AccompanyingResult;\n","import type {\n  DesctiptionsType,\n  DetailsBaseType,\n  PersonalityType,\n} from '@kurone-kito/dantalion-i18n';\nimport type { ReactNode, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Details from '../molecules/Details';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items */\n  readonly children?: ReactNode;\n  /** The resources of the descriptions. */\n  readonly descriptions: Pick<DesctiptionsType, 'strategy' | 'weak'>;\n  /** The resources of the personality details. */\n  readonly details: DetailsBaseType;\n  /** The resources of the inner personality details. */\n  readonly inner: PersonalityType;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result component. */\nconst GeniusResultDetail: VFC<Props> = ({\n  children,\n  descriptions,\n  details,\n  inner,\n  nickname,\n}) => {\n  const { t } = useTranslation();\n  return (\n    <ResultDetail\n      heading={details.name}\n      headingDetail={details.detail}\n      hook={\n        <>\n          {inner.summary}\n          <br />\n          {t('web.result.probed', { nickname, type: inner.name })}\n        </>\n      }\n      moreDetail={inner.detail}\n    >\n      <Details caption={descriptions.weak} tooltip={t('web.tooltip.summary')}>\n        {inner.weak}\n      </Details>\n      <Details\n        caption={descriptions.strategy}\n        tooltip={t('web.tooltip.summary')}\n      >\n        {inner.strategy}\n      </Details>\n      {children}\n    </ResultDetail>\n  );\n};\nGeniusResultDetail.displayName = 'GeniusResultDetail';\n\nexport default GeniusResultDetail;\n","import type { LifeBase } from '@kurone-kito/dantalion-core';\nimport type {\n  DetailAccessor,\n  DetailsBaseType,\n} from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessor object */\n  readonly accessors: DetailAccessor<\n    DetailsBaseType<string[]>,\n    LifeBase,\n    string\n  >;\n  /** Specifies the lifebase value */\n  readonly lifeBase: LifeBase;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result component. */\nconst LifeBaseResultDetail: VFC<Props> = ({\n  accessors,\n  lifeBase,\n  nickname,\n}) => {\n  const { t } = useTranslation();\n  const { detail, name } = accessors.getByKey(lifeBase);\n  const desc = t<string, DetailsBaseType>('web.result.lifeBase', {\n    nickname,\n    returnObjects: true,\n  });\n  return (\n    <ResultDetail\n      heading={accessors.getCategoryDetail()}\n      headingDetail={desc.detail}\n      hook={desc.name}\n      hookAdditional={name}\n      moreDetail={detail}\n    />\n  );\n};\nLifeBaseResultDetail.displayName = 'LifeBaseResultDetail';\n\nexport default LifeBaseResultDetail;\n","import type { ReactNode, VFC } from 'react';\nimport List, { Props as ListProps } from '../atoms/List';\n\n/** Type definition of the required attributes. */\nexport interface Props extends Omit<ListProps, 'children'> {\n  /** The children items. */\n  readonly children?: readonly (readonly [ReactNode, ReactNode])[];\n}\n\n/** The generic list component which its items allow the Markdown format. */\nconst TupleList: VFC<Props> = ({ children, ...props }) => (\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  <List {...props}>\n    {children?.map(([caption, content], index) => (\n      // eslint-disable-next-line react/no-array-index-key\n      <section className=\"text-xl\" key={index}>\n        <h2 className=\"inline font-extrabold\">{caption}</h2>\n        <p className=\"inline ml-3\">{content}</p>\n      </section>\n    ))}\n  </List>\n);\nTupleList.displayName = 'TupleList';\n\nexport default TupleList;\n","import type { Motivation } from '@kurone-kito/dantalion-core';\nimport type { DetailAccessor } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport ResultFrame from '../atoms/ResultFrame';\nimport TupleList from '../molecules/TupleList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessor object */\n  readonly accessors: DetailAccessor<string, Motivation, string>;\n  /** Specifies the motivation value */\n  readonly motivation: Motivation;\n}\n\n/** The result component. */\nconst MotivationResultDetail: VFC<Props> = ({ accessors, motivation }) => (\n  <ResultFrame>\n    <TupleList className=\"list-disc pl-8\">\n      {[[accessors.getCategoryDetail(), accessors.getByKey(motivation)]]}\n    </TupleList>\n  </ResultFrame>\n);\nMotivationResultDetail.displayName = 'MotivationResultDetail';\n\nexport default MotivationResultDetail;\n","import type { Potential } from '@kurone-kito/dantalion-core';\nimport type { DetailAccessor } from '@kurone-kito/dantalion-i18n';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the accessor object */\n  readonly accessors: DetailAccessor<\n    readonly string[],\n    readonly [Potential, Potential]\n  >;\n  /** Specifies the lifebase value */\n  readonly potentials: readonly [Potential, Potential];\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** The result component. */\nconst LifeBaseResultDetail: VFC<Props> = ({\n  accessors,\n  potentials,\n  nickname,\n}) => {\n  const { t } = useTranslation();\n  const desc = accessors.getCategoryDetail();\n  return (\n    <ResultDetail\n      heading={desc.name}\n      headingDetail={desc.detail}\n      hook={t('web.result.potential', { nickname })}\n      moreDetail={accessors.getByKey(potentials)}\n    />\n  );\n};\nLifeBaseResultDetail.displayName = 'LifeBaseResultDetail';\n\nexport default LifeBaseResultDetail;\n","import type { ReactNode, VFC } from 'react';\nimport InlineMarkdown from '../atoms/InlineMarkdown';\nimport ResultFrame from '../atoms/ResultFrame';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the heading. */\n  readonly caption?: ReactNode;\n  /** The children items. */\n  readonly children?: string;\n}\n\n/** The personality file component */\nconst PersonalityFileId: VFC<Props> = ({ caption, children }) => (\n  <ResultFrame>\n    {caption}:&nbsp;<InlineMarkdown>{`\\`${children}\\``}</InlineMarkdown>\n  </ResultFrame>\n);\nPersonalityFileId.displayName = 'PersonalityFileId';\n\nexport default PersonalityFileId;\n","import { Personality, toCC } from '@kurone-kito/dantalion-core';\nimport type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport MoleculesPersonalityFileId from '../molecules/PersonalityFileId';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The details for Personality. */\n  readonly personality: Personality;\n}\n\n/** The personality file component */\nconst PersonalityFileId: VFC<Props> = ({ personality }) => {\n  const { t } = useTranslation();\n  return (\n    <MoleculesPersonalityFileId caption={t('web.result.profile')}>\n      {toCC(personality)}\n    </MoleculesPersonalityFileId>\n  );\n};\nPersonalityFileId.displayName = 'PersonalityFileId';\n\nexport default PersonalityFileId;\n","import type {\n  DesctiptionsType,\n  PersonalityDetailBaseType,\n  PersonalityType,\n} from '@kurone-kito/dantalion-i18n';\nimport { useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport ReactMarkdown from 'react-markdown';\nimport InlineMarkdownList from '../molecules/InlineMarkdownList';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The resources of the descriptions. */\n  readonly descriptions: Pick<DesctiptionsType, 'genius1' | 'genius2'>;\n  /** The resources of the personality details. */\n  readonly details: PersonalityDetailBaseType;\n  /** The resources of the inner personality details. */\n  readonly inner: Pick<PersonalityType, 'name' | 'summary'>;\n  /** The resources of the outer personality details. */\n  readonly outer: Pick<PersonalityType, 'name' | 'summary'>;\n  /** The resources of the workStyle personality details. */\n  readonly workStyle: Pick<PersonalityType, 'name' | 'summary'>;\n}\n\n/** Create the source from props. */\nconst createSource = ({\n  inner,\n  outer,\n  workStyle,\n}: Pick<Props, 'inner' | 'outer' | 'workStyle'>) =>\n  (\n    [\n      ['inner', inner],\n      ['outer', outer],\n      ['workStyle', workStyle],\n    ] as const\n  ).map<readonly [string, string]>(([key, { summary, name }]) => [\n    `web.result.genius.${key}`,\n    `${summary} ... **${name}**`,\n  ]);\n\n/** The result component. */\nconst SubGeniusResultDetail: VFC<Props> = ({\n  descriptions,\n  details,\n  inner,\n  outer,\n  workStyle,\n}) => {\n  const { t } = useTranslation();\n  const source = useMemo(\n    () =>\n      createSource({ inner, outer, workStyle }).map(([key, type]) =>\n        t(key, { type })\n      ),\n    [inner, outer, t, workStyle]\n  );\n  return (\n    <>\n      <hr className=\"border-gray-300 my-3\" />\n      <ReactMarkdown>{descriptions.genius1}</ReactMarkdown>\n      <InlineMarkdownList className=\"list-decimal p-4 md:px-8\" order>\n        {Object.values(details)}\n      </InlineMarkdownList>\n      <ReactMarkdown>{descriptions.genius2}</ReactMarkdown>\n      <InlineMarkdownList className=\"list-decimal p-4 md:px-8\" order>\n        {source}\n      </InlineMarkdownList>\n    </>\n  );\n};\nSubGeniusResultDetail.displayName = 'SubGeniusResultDetail';\n\nexport default SubGeniusResultDetail;\n","import { faTwitter } from '@fortawesome/free-brands-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { stringify } from 'qs';\nimport type { ReactNode, VFC } from 'react';\nimport Anchor from '../atoms/Anchor';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The children items. */\n  readonly children?: ReactNode;\n  /** The hashtag. */\n  readonly hashtag?: string;\n  /** The content. */\n  readonly text: string;\n  /** URL. */\n  readonly url?: string;\n}\n\n/**\n * Create the Tweet button URL.\n * @param props The props.\n */\nconst createUrl = ({ hashtag, text, url }: Omit<Props, 'children'>) =>\n  [\n    'https://twitter.com/intent/tweet',\n    stringify({ button_hashtag: hashtag, url, text }, { addQueryPrefix: true }),\n  ].join('');\n\n/** Tweet button component. */\nconst TweetButton: VFC<Props> = ({ children, ...props }) => (\n  <p className=\"text-center mb-4 select-none\">\n    <Anchor\n      className=\"block duration-200 ease-in-out flex-grow font-bold leading-5 nm-flat-indigo-100 px-8 py-4 rounded-full text-md sm:text-xl tracking-widest transform transition uppercase dark:nm-flat-purple-800 dark:hover:nm-flat-purple-900 hover:nm-flat-blue-50-lg\"\n      href={createUrl(props)}\n      noblank\n      nofollow\n    >\n      <FontAwesomeIcon className=\"animate-pulse mx-2\" icon={faTwitter} />\n      {children}\n    </Anchor>\n  </p>\n);\nTweetButton.displayName = 'TweetButton';\n\nexport default TweetButton;\n","import type { VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport useIsSsr from '../../hooks/useIsSsr';\nimport MoleculesTweetButton from '../molecules/TweetButton';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The hook text. */\n  readonly hooks?: string;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n}\n\n/** Tweet button component. */\nconst TweetButton: VFC<Props> = ({ hooks, nickname }) => {\n  const { t } = useTranslation();\n  const isSsr = useIsSsr();\n  return (\n    <MoleculesTweetButton\n      hashtag={t('web.share.hashtag')}\n      text={[t('web.result.heading', { nickname }), hooks].join('\\n')}\n      url={isSsr() ? undefined : window.location.href}\n    >\n      {t('web.share.tweet')}\n    </MoleculesTweetButton>\n  );\n};\nTweetButton.displayName = 'TweetButton';\n\nexport default TweetButton;\n","import type { Vector } from '@kurone-kito/dantalion-core';\nimport type { Accessors } from '@kurone-kito/dantalion-i18n';\nimport type { ReactNode, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport Details from '../molecules/Details';\nimport ResultDetail from '../molecules/ResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** The accessor for vector. */\n  readonly accessor: Accessors['vector'];\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n  /** The strategy details. */\n  readonly strategy?: ReactNode;\n  /** The vector type. */\n  readonly vector: Vector;\n}\n\n/** The detail component. */\nconst VectorResultDetail: VFC<Props> = ({\n  accessor,\n  nickname,\n  strategy,\n  vector,\n}) => {\n  const { t } = useTranslation();\n  const heading = accessor.getCategoryDetail();\n  const detail = accessor.getByKey(vector);\n  return (\n    <ResultDetail\n      heading={heading.name}\n      headingDetail={heading.detail}\n      hook={t('web.result.probed', { nickname, type: detail.name })}\n      moreDetail={detail.detail}\n    >\n      <Details caption={strategy} tooltip={t('web.tooltip.summary')}>\n        {detail.strategy}\n      </Details>\n    </ResultDetail>\n  );\n};\nVectorResultDetail.displayName = 'VectorResultDetail';\n\nexport default VectorResultDetail;\n","import type { Detail, Genius, Personality } from '@kurone-kito/dantalion-core';\nimport { createAccessors } from '@kurone-kito/dantalion-i18n';\nimport { useMemo, VFC } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport AccompanyingResult from './AccompanyingResult';\nimport GeniusResultDetail from './GeniusResultDetail';\nimport LifeBaseResultDetail from './LifeBaseResultDetail';\nimport MotivationResultDetail from './MotivationResultDetail';\nimport PotentialResultDetail from './PotentialResultDetail';\nimport PersonalityFileId from './PersonalityFileId';\nimport SubGeniusResultDetail from './SubGeniusResultDetail';\nimport TweetButton from './TweetButton';\nimport VectorResultDetail from './VectorResultDetail';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  /** Specifies the details for personality. */\n  readonly detail: Detail;\n  /** Specifies the inner personality type. */\n  readonly inner: Genius;\n  /** Specifies the nickname. */\n  readonly nickname?: string;\n  /** Specifies the details for Personality. */\n  readonly personality?: Personality;\n}\n\n/** The result component. */\nconst Result: VFC<Props> = ({ detail, inner, nickname, personality }) => {\n  const { t } = useTranslation();\n  const accessors = useMemo(() => createAccessors(t), [t]);\n  const descriptions = accessors.getDescription();\n  const geniusDetails = accessors.genius.getCategoryDetail();\n  const innerDetail = accessors.genius.getByKey(inner);\n  return !personality || personality.inner === inner ? (\n    <>\n      <article>\n        <VectorResultDetail\n          accessor={accessors.vector}\n          nickname={nickname}\n          strategy={descriptions.strategy}\n          vector={detail.vector}\n        />\n        <GeniusResultDetail\n          descriptions={descriptions}\n          details={geniusDetails}\n          inner={innerDetail}\n          nickname={nickname}\n        >\n          {!!personality && (\n            <SubGeniusResultDetail\n              descriptions={descriptions}\n              details={geniusDetails.descriptions}\n              inner={innerDetail}\n              outer={accessors.genius.getByKey(personality.outer)}\n              workStyle={accessors.genius.getByKey(personality.workStyle)}\n            />\n          )}\n        </GeniusResultDetail>\n        {!!personality && (\n          <>\n            <LifeBaseResultDetail\n              accessors={accessors.lifeBase}\n              lifeBase={personality.lifeBase}\n              nickname={nickname}\n            />\n            <PotentialResultDetail\n              accessors={accessors.potential}\n              potentials={personality.potentials}\n              nickname={nickname}\n            />\n          </>\n        )}\n        <MotivationResultDetail\n          accessors={accessors.motivation}\n          motivation={detail.motivation}\n        />\n        <AccompanyingResult\n          accessors={accessors}\n          details={detail}\n          nickname={nickname}\n        />\n        {!!personality && <PersonalityFileId personality={personality} />}\n      </article>\n      <aside>\n        <TweetButton nickname={nickname} hooks={innerDetail.summary} />\n      </aside>\n    </>\n  ) : null;\n};\nResult.displayName = 'Result';\n\nexport default Result;\n","import { Genius, getDetail } from '@kurone-kito/dantalion-core';\nimport { createAccessors } from '@kurone-kito/dantalion-i18n';\nimport { useTranslation } from 'react-i18next';\nimport { useMemo, VFC } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport Anchor from '../atoms/Anchor';\nimport Header from '../atoms/Header';\nimport Article from '../molecules/Article';\nimport Footer from '../molecules/Footer';\nimport BirthForm from '../organisms/BirthForm';\nimport Head from '../organisms/Head';\nimport AppearanceSelector from '../organisms/AppearanceSelector';\nimport LanguageSelector from '../organisms/LanguageSelector';\nimport Result from '../organisms/Result';\nimport { usePSDecoder } from '../../hooks/usePersonality';\nimport FormReducer from '../../stores/FormReducer';\n\n/** Type definition of the required attributes. */\nexport interface Props {\n  readonly inner?: Genius;\n}\n\nconst Template: VFC<Props> = ({ inner }) => {\n  const { t } = useTranslation();\n  const accessors = useMemo(() => createAccessors(t), [t]);\n  const [ps, nickname] = usePSDecoder();\n  const concreteInner = ps?.inner ?? inner;\n  const dt = concreteInner && getDetail(concreteInner);\n  const pageName =\n    concreteInner && accessors.genius.getByKey(concreteInner).summary;\n  return (\n    <>\n      <Head pageName={pageName} />\n      <Header>\n        {ps ? t('web.result.heading', { nickname }) : t('web.description')}\n      </Header>\n      <main className=\"md:container mx-auto text-gray-600\">\n        {!!(concreteInner && dt) && (\n          <Result\n            detail={dt}\n            inner={concreteInner}\n            nickname={nickname}\n            personality={ps}\n          />\n        )}\n        <FormReducer.Provider>\n          <BirthForm />\n        </FormReducer.Provider>\n        <Article\n          featureBody={t('web.feature.body', { returnObjects: true })}\n          featureHeading={t('web.feature.title')}\n          tooltipFeatureDetails={t('web.tooltip.summary')}\n        >\n          {t('web.preface', { joinArrays: '\\n\\n' })}\n        </Article>\n        <ReactMarkdown className=\"mx-0 my-5 nm-inset-gray-500-sm overflow-auto p-6 text-white dark:nm-inset-gray-800-sm dark:text-gray-200 md:rounded-3xl\">\n          {t('web.install', { joinArrays: '\\n' })}\n        </ReactMarkdown>\n        <p className=\"font-bold text-center text-xl py-6\">\n          <Anchor href=\"https://github.com/kurone-kito/dantalion\">\n            {t('web.seeRepo')}\n          </Anchor>\n        </p>\n      </main>\n      <Footer author={t('web.author')}>\n        <LanguageSelector />\n        <AppearanceSelector />\n      </Footer>\n    </>\n  );\n};\nTemplate.displayName = 'Template';\n\nexport default Template;\n"],"sourceRoot":""}